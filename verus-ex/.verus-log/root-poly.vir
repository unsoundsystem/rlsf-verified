(@ "vstd/std_specs/core.rs:105:1: 105:49 (#0)" (Datatype :name (Dt Path "core!option.Option.") :proxy (@ "vstd/std_specs/core.rs:105:1: 105:49 (#0)"
   "vstd!std_specs.core.ExOption."
  ) :owning_module "vstd!std_specs.core." :visibility (Visibility :restricted_to None) :transparency (DatatypeTransparency WhenVisible
   (Visibility :restricted_to None)
  ) :typ_params (
   (tuple "V" (AcceptRecursiveType Accept))
  ) :typ_bounds () :variants (
   (Variant :name "None" :fields () :ctor_style (CtorPrintStyle Const))
   (Variant :name "Some" :fields ((-> 0 (tuple (Typ TypParam "V") Exec (Visibility :restricted_to None)))) :ctor_style (CtorPrintStyle
     Parens))
  ) :mode Exec :ext_equal true :user_defined_invariant_fn None))

(@ "vstd/std_specs/core.rs:135:1: 135:67 (#0)" (Datatype :name (Dt Path "core!marker.PhantomData.") :proxy (@ "vstd/std_specs/core.rs:135:1: 135:67 (#0)"
   "vstd!std_specs.core.ExPhantomData."
  ) :owning_module "vstd!std_specs.core." :visibility (Visibility :restricted_to None) :transparency (DatatypeTransparency WhenVisible
   (Visibility :restricted_to None)
  ) :typ_params (
   (tuple "V" (AcceptRecursiveType Accept))
  ) :typ_bounds () :variants (
   (Variant :name "PhantomData" :fields () :ctor_style (CtorPrintStyle Const))
  ) :mode Exec :ext_equal false :user_defined_invariant_fn None))

(@ "vstd/map.rs:34:1: 36:2 (#0)" (Datatype :name (Dt Path "vstd!map.Map.") :proxy None :owning_module "vstd!map." :visibility
  (Visibility :restricted_to None) :transparency (DatatypeTransparency Never) :typ_params (
   (tuple "K" (AcceptRecursiveType Reject))
   (tuple "V" (AcceptRecursiveType Accept))
  ) :typ_bounds () :variants () :mode Proof :ext_equal true :user_defined_invariant_fn None))

(@ "vstd/raw_ptr.rs:126:1: 131:2 (#0)" (Datatype :name (Dt Path "vstd!raw_ptr.MemContents.") :proxy None :owning_module "vstd!raw_ptr."
  :visibility (Visibility :restricted_to None) :transparency (DatatypeTransparency WhenVisible (Visibility :restricted_to None))
  :typ_params (
   (tuple "T" (AcceptRecursiveType Accept))
  ) :typ_bounds () :variants (
   (Variant :name "Uninit" :fields () :ctor_style (CtorPrintStyle Const))
   (Variant :name "Init" :fields ((-> 0 (tuple (Typ TypParam "T") Exec (Visibility :restricted_to None)))) :ctor_style (CtorPrintStyle
     Parens))
  ) :mode Spec :ext_equal false :user_defined_invariant_fn None))

(@ "vstd/seq.rs:31:1: 33:2 (#0)" (Datatype :name (Dt Path "vstd!seq.Seq.") :proxy None :owning_module "vstd!seq." :visibility
  (Visibility :restricted_to None) :transparency (DatatypeTransparency Never) :typ_params (
   (tuple "A" (AcceptRecursiveType Accept))
  ) :typ_bounds () :variants () :mode Exec :ext_equal true :user_defined_invariant_fn None))

(@ "vstd/set.rs:34:1: 36:2 (#0)" (Datatype :name (Dt Path "vstd!set.Set.") :proxy None :owning_module "vstd!set." :visibility
  (Visibility :restricted_to None) :transparency (DatatypeTransparency Never) :typ_params (
   (tuple "A" (AcceptRecursiveType Reject))
  ) :typ_bounds () :variants () :mode Exec :ext_equal true :user_defined_invariant_fn None))

(@ "vstd/simple_pptr.rs:153:1: 153:51 (#0)" (Datatype :name (Dt Path "vstd!simple_pptr.PPtr.") :proxy None :owning_module "vstd!simple_pptr."
  :visibility (Visibility :restricted_to None) :transparency (DatatypeTransparency WhenVisible (Visibility :restricted_to None))
  :typ_params (
   (tuple "V" (AcceptRecursiveType RejectInGround))
  ) :typ_bounds () :variants (
   (Variant :name "PPtr" :fields ((-> 0 (tuple (Typ Int (IntRange USize)) Exec (Visibility :restricted_to None))) (-> 1 (tuple (
        Typ Datatype (Dt Path "core!marker.PhantomData.") ((Typ TypParam "V")) ()
       ) Exec (Visibility :restricted_to None)))
    ) :ctor_style (CtorPrintStyle Parens))
  ) :mode Exec :ext_equal false :user_defined_invariant_fn None))

(@ "vstd/simple_pptr.rs:162:1: 166:2 (#0)" (Datatype :name (Dt Path "vstd!simple_pptr.PointsTo.") :proxy None :owning_module
  "vstd!simple_pptr." :visibility (Visibility :restricted_to None) :transparency (DatatypeTransparency WhenVisible (Visibility
    :restricted_to "vstd!simple_pptr.")
  ) :typ_params (
   (tuple "V" (AcceptRecursiveType RejectInGround))
  ) :typ_bounds () :variants () :mode Proof :ext_equal false :user_defined_invariant_fn (Fun :path "vstd!simple_pptr.impl&%1.wf.")))

(@ "./singly_linked_list_trivial.rs:6:5: 9:6 (#0)" (Datatype :name (Dt Path "singly_linked_list_trivial!Node.") :proxy None
  :owning_module "singly_linked_list_trivial!." :visibility (Visibility :restricted_to "singly_linked_list_trivial!.") :transparency
  (DatatypeTransparency WhenVisible (Visibility :restricted_to "singly_linked_list_trivial!.")) :typ_params () :typ_bounds
  () :variants (
   (Variant :name "Node" :fields ((-> next (tuple (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.")
          ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
        ) ()
       ) Exec (Visibility :restricted_to "singly_linked_list_trivial!."))
     ) (-> x (tuple (Typ Int (IntRange USize)) Exec (Visibility :restricted_to "singly_linked_list_trivial!.")))
    ) :ctor_style (CtorPrintStyle Braces))
  ) :mode Exec :ext_equal false :user_defined_invariant_fn None))

(@ "./singly_linked_list_trivial.rs:15:5: 19:6 (#0)" (Datatype :name (Dt Path "singly_linked_list_trivial!LList.") :proxy None
  :owning_module "singly_linked_list_trivial!." :visibility (Visibility :restricted_to "singly_linked_list_trivial!.") :transparency
  (DatatypeTransparency WhenVisible (Visibility :restricted_to "singly_linked_list_trivial!.")) :typ_params () :typ_bounds
  () :variants (
   (Variant :name "LList" :fields ((-> first (tuple (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.")
          ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
        ) ()
       ) Exec (Visibility :restricted_to "singly_linked_list_trivial!."))
     ) (-> perms (tuple (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!map.Map.") ((Typ Int (IntRange Nat))
          (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
         ) ())
       ) Exec (Visibility :restricted_to "singly_linked_list_trivial!."))
     ) (-> ptrs (tuple (Typ Decorate (TypDecoration Ghost) None (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.")
           ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
         ) ())
       ) Exec (Visibility :restricted_to "singly_linked_list_trivial!.")))
    ) :ctor_style (CtorPrintStyle Braces))
  ) :mode Exec :ext_equal false :user_defined_invariant_fn None))

(@ "no location" (Datatype :name (Dt Tuple 0) :proxy None :owning_module None :visibility (Visibility :restricted_to None)
  :transparency (DatatypeTransparency WhenVisible (Visibility :restricted_to None)) :typ_params () :typ_bounds () :variants
  (
   (Variant :name "tuple%0" :fields () :ctor_style (CtorPrintStyle Tuple))
  ) :mode Exec :ext_equal false :user_defined_invariant_fn None))

(@ "no location" (Datatype :name (Dt Tuple 2) :proxy None :owning_module None :visibility (Visibility :restricted_to None)
  :transparency (DatatypeTransparency WhenVisible (Visibility :restricted_to None)) :typ_params (
   (tuple "T%0" (AcceptRecursiveType RejectInGround))
   (tuple "T%1" (AcceptRecursiveType RejectInGround))
  ) :typ_bounds () :variants (
   (Variant :name "tuple%2" :fields ((-> 0 (tuple (Typ TypParam "T%0") Exec (Visibility :restricted_to None))) (-> 1 (tuple (Typ
        TypParam "T%1"
       ) Exec (Visibility :restricted_to None)))
    ) :ctor_style (CtorPrintStyle Tuple))
  ) :mode Exec :ext_equal true :user_defined_invariant_fn None))

(@ "vstd/std_specs/num.rs:16:13: 16:16 (#1977)" (Function
  :name (Fun :path "core!clone.impls.impl&%5.clone.") :proxy (@ "vstd/std_specs/num.rs:16:13: 16:16 (#1977)" "vstd!std_specs.num.usize_specs.ex_num_clone.")
  :kind (FunctionKind TraitMethodImpl :method (Fun :path "core!clone.Clone.clone.") :impl_path "core!clone.impls.impl&%5." :trait_path
   "core!clone.Clone." :trait_typ_args ((Typ Int (IntRange USize))) :inherit_body_from None
  ) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.num.usize_specs." :mode Exec :fuel 1 :typ_params
  () :typ_bounds () :params (
   (@ "vstd/std_specs/num.rs:16:33: 16:34 (#1977)" (Param :name (VarIdent "x" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Int (IntRange USize))
     ) :mode Exec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/num.rs:357:12: 357:17 (#0)" (Param :name (VarIdent "res" (VarIdentDisambiguate VirParam)) :typ (Typ
     Int (IntRange USize)
    ) :mode Exec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure (
   (@@ "vstd/std_specs/num.rs:17:25: 17:33 (#1977)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/std_specs/num.rs:17:25: 17:28 (#1977)"
      (> Var (VarIdent "res" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange USize))
     ) (@@ "vstd/std_specs/num.rs:17:32: 17:33 (#1977)" (> Var (VarIdent "x" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
        Ref
       ) None (Typ Int (IntRange USize))))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method true :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/clone.rs:10:5: 10:29 (#0)" (Function
  :name (Fun :path "core!clone.Clone.clone.") :proxy (@ "vstd/std_specs/clone.rs:10:5: 10:29 (#0)" "vstd!std_specs.clone.ExClone.clone.")
  :kind (FunctionKind TraitMethodDecl :trait_path "core!clone.Clone." :has_default false) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!std_specs.clone." :mode Exec :fuel 1 :typ_params (
   "Self%"
  ) :typ_bounds (
   (GenericBound Trait "core!clone.Clone." ((Typ TypParam "Self%")))
  ) :params (
   (@ "vstd/std_specs/clone.rs:10:14: 10:19 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ TypParam "Self%")
     ) :mode Exec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/clone.rs:10:24: 10:28 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ TypParam "Self%") :mode Exec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/clone.rs:22:1: 22:45 (#0)" (Function
  :name (Fun :path "core!clone.impls.impl&%21.clone.") :proxy (@ "vstd/std_specs/clone.rs:22:1: 22:45 (#0)" "vstd!std_specs.clone.ex_bool_clone.")
  :kind (FunctionKind TraitMethodImpl :method (Fun :path "core!clone.Clone.clone.") :impl_path "core!clone.impls.impl&%21."
   :trait_path "core!clone.Clone." :trait_typ_args ((Typ Bool)) :inherit_body_from None
  ) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.clone." :mode Exec :fuel 1 :typ_params () :typ_bounds
  () :params (
   (@ "vstd/std_specs/clone.rs:22:22: 22:30 (#0)" (Param :name (VarIdent "b" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Bool)
     ) :mode Exec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/clone.rs:22:41: 22:45 (#0)" (Param :name (VarIdent "res" (VarIdentDisambiguate VirParam)) :typ (Typ
     Bool
    ) :mode Exec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure (
   (@@ "vstd/std_specs/clone.rs:24:9: 24:17 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/std_specs/clone.rs:24:9: 24:12 (#0)" (
       > Var (VarIdent "res" (VarIdentDisambiguate VirParam))
      ) (Typ Bool)
     ) (@@ "vstd/std_specs/clone.rs:24:16: 24:17 (#0)" (> Var (VarIdent "b" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
        Ref
       ) None (Typ Bool)))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method true :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/clone.rs:39:1: 39:68 (#0)" (Function
  :name (Fun :path "core!clone.impls.impl&%3.clone.") :proxy (@ "vstd/std_specs/clone.rs:39:1: 39:68 (#0)" "vstd!std_specs.clone.ex_ref_clone.")
  :kind (FunctionKind TraitMethodImpl :method (Fun :path "core!clone.Clone.clone.") :impl_path "core!clone.impls.impl&%3." :trait_path
   "core!clone.Clone." :trait_typ_args ((Typ Decorate (TypDecoration Ref) None (Typ TypParam "T"))) :inherit_body_from None
  ) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.clone." :mode Exec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/clone.rs:39:40: 39:52 (#0)" (Param :name (VarIdent "b" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Decorate (TypDecoration Ref) None (Typ TypParam "T"))
     ) :mode Exec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/clone.rs:39:63: 39:68 (#0)" (Param :name (VarIdent "res" (VarIdentDisambiguate VirParam)) :typ (Typ
     Decorate (TypDecoration Ref) None (Typ TypParam "T")
    ) :mode Exec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure (
   (@@ "vstd/std_specs/clone.rs:41:9: 41:17 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/std_specs/clone.rs:41:9: 41:12 (#0)" (
       > Var (VarIdent "res" (VarIdentDisambiguate VirParam))
      ) (Typ Decorate (TypDecoration Ref) None (Typ TypParam "T"))
     ) (@@ "vstd/std_specs/clone.rs:41:16: 41:17 (#0)" (> Var (VarIdent "b" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
        Ref
       ) None (Typ Decorate (TypDecoration Ref) None (Typ TypParam "T"))))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method true :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/clone.rs:57:1: 57:69 (#0)" (Function
  :name (Fun :path "builtin!impl&%4.clone.") :proxy (@ "vstd/std_specs/clone.rs:57:1: 57:69 (#0)" "vstd!std_specs.clone.ex_tracked_clone.")
  :kind (FunctionKind TraitMethodImpl :method (Fun :path "core!clone.Clone.clone.") :impl_path "builtin!impl&%4." :trait_path
   "core!clone.Clone." :trait_typ_args ((Typ Decorate (TypDecoration Tracked) None (Typ TypParam "T"))) :inherit_body_from None
  ) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.clone." :mode Exec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/clone.rs:57:34: 57:48 (#0)" (Param :name (VarIdent "b" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Decorate (TypDecoration Tracked) None (Typ TypParam "T"))
     ) :mode Exec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/clone.rs:57:59: 57:69 (#0)" (Param :name (VarIdent "res" (VarIdentDisambiguate VirParam)) :typ (Typ
     Decorate (TypDecoration Tracked) None (Typ TypParam "T")
    ) :mode Exec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure (
   (@@ "vstd/std_specs/clone.rs:59:9: 59:17 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/std_specs/clone.rs:59:9: 59:12 (#0)" (
       > Var (VarIdent "res" (VarIdentDisambiguate VirParam))
      ) (Typ Decorate (TypDecoration Tracked) None (Typ TypParam "T"))
     ) (@@ "vstd/std_specs/clone.rs:59:16: 59:17 (#0)" (> Var (VarIdent "b" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
        Ref
       ) None (Typ Decorate (TypDecoration Tracked) None (Typ TypParam "T"))))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method true :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/std_specs/clone.rs:65:1: 65:57 (#0)" (Function
  :name (Fun :path "builtin!impl&%2.clone.") :proxy (@ "vstd/std_specs/clone.rs:65:1: 65:57 (#0)" "vstd!std_specs.clone.ex_ghost_clone.")
  :kind (FunctionKind TraitMethodImpl :method (Fun :path "core!clone.Clone.clone.") :impl_path "builtin!impl&%2." :trait_path
   "core!clone.Clone." :trait_typ_args ((Typ Decorate (TypDecoration Ghost) None (Typ TypParam "T"))) :inherit_body_from None
  ) :visibility (Visibility :restricted_to None) :owning_module "vstd!std_specs.clone." :mode Exec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/std_specs/clone.rs:65:26: 65:38 (#0)" (Param :name (VarIdent "b" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Decorate (TypDecoration Ghost) None (Typ TypParam "T"))
     ) :mode Exec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/std_specs/clone.rs:65:49: 65:57 (#0)" (Param :name (VarIdent "res" (VarIdentDisambiguate VirParam)) :typ (Typ
     Decorate (TypDecoration Ghost) None (Typ TypParam "T")
    ) :mode Exec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure (
   (@@ "vstd/std_specs/clone.rs:67:9: 67:17 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/std_specs/clone.rs:67:9: 67:12 (#0)" (
       > Var (VarIdent "res" (VarIdentDisambiguate VirParam))
      ) (Typ Decorate (TypDecoration Ghost) None (Typ TypParam "T"))
     ) (@@ "vstd/std_specs/clone.rs:67:16: 67:17 (#0)" (> Var (VarIdent "b" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
        Ref
       ) None (Typ Decorate (TypDecoration Ghost) None (Typ TypParam "T"))))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method true :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/map.rs:55:5: 55:36 (#0)" (Function
  :name (Fun :path "vstd!map.impl&%0.dom.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to None)
  :owning_module "vstd!map." :mode Spec :fuel 1 :typ_params (
   "K"
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/map.rs:55:21: 55:25 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!map.Map."
      ) ((Typ TypParam "K") (Typ TypParam "V")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/map.rs:55:30: 55:36 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ()
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body None :extra_dependencies ()))

(@ "vstd/map.rs:59:5: 59:41 (#0)" (Function
  :name (Fun :path "vstd!map.impl&%0.index.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!map." :mode Spec :fuel 1 :typ_params (
   "K"
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/map.rs:59:23: 59:27 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!map.Map."
      ) ((Typ TypParam "K") (Typ TypParam "V")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/map.rs:59:29: 59:35 (#0)" (Param :name (VarIdent "key" (VarIdentDisambiguate VirParam)) :typ (Typ TypParam "K") :mode
     Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/map.rs:59:40: 59:41 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ TypParam
     "V"
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require (
   (@@ "vstd/map.rs:61:13: 61:37 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!set.impl&%0.contains.")
      ((Typ TypParam "K")) () (AutospecUsage Final)
     ) ((@@ "vstd/map.rs:61:13: 61:23 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.dom.") ((Typ
           TypParam "K"
          ) (Typ TypParam "V")
         ) () (AutospecUsage Final)
        ) ((@@ "vstd/map.rs:61:13: 61:17 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
           ((Typ TypParam "K") (Typ TypParam "V")) ())))
       ) (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ())
      ) (@@ "vstd/map.rs:61:33: 61:36 (#0)" (> Var (VarIdent "key" (VarIdentDisambiguate VirParam))) (Typ TypParam "K")))
    ) (Typ Bool))
  ) :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec
  None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method true :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/map.rs:66:5: 66:51 (#0)" (Function
  :name (Fun :path "vstd!map.impl&%0.spec_index.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!map." :mode Spec :fuel 1 :typ_params (
   "K"
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/map.rs:66:33: 66:37 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!map.Map."
      ) ((Typ TypParam "K") (Typ TypParam "V")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/map.rs:66:39: 66:45 (#0)" (Param :name (VarIdent "key" (VarIdentDisambiguate VirParam)) :typ (Typ TypParam "K") :mode
     Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/map.rs:66:50: 66:51 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ TypParam
     "V"
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require (
   (@@ "vstd/map.rs:68:13: 68:37 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!set.impl&%0.contains.")
      ((Typ TypParam "K")) () (AutospecUsage Final)
     ) ((@@ "vstd/map.rs:68:13: 68:23 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.dom.") ((Typ
           TypParam "K"
          ) (Typ TypParam "V")
         ) () (AutospecUsage Final)
        ) ((@@ "vstd/map.rs:68:13: 68:17 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
           ((Typ TypParam "K") (Typ TypParam "V")) ())))
       ) (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ())
      ) (@@ "vstd/map.rs:68:33: 68:36 (#0)" (> Var (VarIdent "key" (VarIdentDisambiguate VirParam))) (Typ TypParam "K")))
    ) (Typ Bool))
  ) :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec
  None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks true :inline true :hidden () :broadcast_forall
   false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method true :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body (@@ "vstd/map.rs:69:5: 71:6 (#0)" (> Block () (@@ "vstd/map.rs:70:9: 70:24 (#0)" (> Call (CallTarget Fun (CallTargetKind
        Static
       ) (Fun :path "vstd!map.impl&%0.index.") ((Typ TypParam "K") (Typ TypParam "V")) () (AutospecUsage Final)
      ) ((@@ "vstd/map.rs:70:9: 70:13 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
         ((Typ TypParam "K") (Typ TypParam "V")) ())
       ) (@@ "vstd/map.rs:70:20: 70:23 (#0)" (> Var (VarIdent "key" (VarIdentDisambiguate VirParam))) (Typ TypParam "K")))
     ) (Typ TypParam "V"))
   ) (Typ TypParam "V")
  ) :extra_dependencies ()))

(@ "vstd/map.rs:199:1: 199:84 (#0)" (Function
  :name (Fun :path "vstd!map.axiom_map_index_decreases_finite.") :proxy None :kind (FunctionKind Static) :visibility (Visibility
   :restricted_to None
  ) :owning_module "vstd!map." :mode Proof :fuel 1 :typ_params (
   "K"
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/map.rs:199:63: 199:75 (#0)" (Param :name (VarIdent "m" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!map.Map."
      ) ((Typ TypParam "K") (Typ TypParam "V")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/map.rs:199:77: 199:83 (#0)" (Param :name (VarIdent "key" (VarIdentDisambiguate VirParam)) :typ (Typ TypParam "K")
     :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/map.rs:199:84: 199:84 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Tuple 0) () ()
    ) :mode Proof :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require (
   (@@ "vstd/map.rs:201:9: 201:25 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!set.impl&%0.finite.")
      ((Typ TypParam "K")) () (AutospecUsage Final)
     ) ((@@ "vstd/map.rs:201:9: 201:16 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.dom.") (
          (Typ TypParam "K") (Typ TypParam "V")
         ) () (AutospecUsage Final)
        ) ((@@ "vstd/map.rs:201:9: 201:10 (#0)" (> Var (VarIdent "m" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
           ((Typ TypParam "K") (Typ TypParam "V")) ())))
       ) (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ())))
    ) (Typ Bool))
   (@@ "vstd/map.rs:202:9: 202:30 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!set.impl&%0.contains.")
      ((Typ TypParam "K")) () (AutospecUsage Final)
     ) ((@@ "vstd/map.rs:202:9: 202:16 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.dom.") (
          (Typ TypParam "K") (Typ TypParam "V")
         ) () (AutospecUsage Final)
        ) ((@@ "vstd/map.rs:202:9: 202:10 (#0)" (> Var (VarIdent "m" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
           ((Typ TypParam "K") (Typ TypParam "V")) ())))
       ) (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ())
      ) (@@ "vstd/map.rs:202:26: 202:29 (#0)" (> Var (VarIdent "key" (VarIdentDisambiguate VirParam))) (Typ TypParam "K")))
    ) (Typ Bool))
  ) :ensure (
   (@@ "/home/shinaikakishita/projects/tlsf-verif/verus/source/builtin/src/lib.rs:1430:9: 1430:68 (#1016)" (> Unary (UnaryOp Trigger
      (TriggerAnnotation Trigger None)
     ) (@@ "/home/shinaikakishita/projects/tlsf-verif/verus/source/builtin/src/lib.rs:1430:9: 1430:68 (#1016)" (> Binary (BinaryOp
        HeightCompare :strictly_lt true :recursive_function_field false
       ) (@@ "vstd/map.rs:204:40: 204:46 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.spec_index.")
          ((Typ TypParam "K") (Typ TypParam "V")) () (AutospecUsage Final)
         ) ((@@ "vstd/map.rs:204:40: 204:41 (#0)" (> Var (VarIdent "m" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
            ((Typ TypParam "K") (Typ TypParam "V")) ())
          ) (@@ "vstd/map.rs:204:42: 204:45 (#0)" (> Var (VarIdent "key" (VarIdentDisambiguate VirParam))) (Typ TypParam "K")))
        ) (Typ TypParam "V")
       ) (@@ "vstd/map.rs:204:35: 204:36 (#0)" (> Var (VarIdent "m" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
         ((Typ TypParam "K") (Typ TypParam "V")) ()))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   true :broadcast_forall_only true :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method false :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/map.rs:211:1: 211:86 (#0)" (Function
  :name (Fun :path "vstd!map.axiom_map_index_decreases_infinite.") :proxy None :kind (FunctionKind Static) :visibility (Visibility
   :restricted_to None
  ) :owning_module "vstd!map." :mode Proof :fuel 1 :typ_params (
   "K"
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/map.rs:211:65: 211:77 (#0)" (Param :name (VarIdent "m" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!map.Map."
      ) ((Typ TypParam "K") (Typ TypParam "V")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/map.rs:211:79: 211:85 (#0)" (Param :name (VarIdent "key" (VarIdentDisambiguate VirParam)) :typ (Typ TypParam "K")
     :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/map.rs:211:86: 211:86 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Tuple 0) () ()
    ) :mode Proof :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require (
   (@@ "vstd/map.rs:213:9: 213:30 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!set.impl&%0.contains.")
      ((Typ TypParam "K")) () (AutospecUsage Final)
     ) ((@@ "vstd/map.rs:213:9: 213:16 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.dom.") (
          (Typ TypParam "K") (Typ TypParam "V")
         ) () (AutospecUsage Final)
        ) ((@@ "vstd/map.rs:213:9: 213:10 (#0)" (> Var (VarIdent "m" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
           ((Typ TypParam "K") (Typ TypParam "V")) ())))
       ) (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ())
      ) (@@ "vstd/map.rs:213:26: 213:29 (#0)" (> Var (VarIdent "key" (VarIdentDisambiguate VirParam))) (Typ TypParam "K")))
    ) (Typ Bool))
  ) :ensure (
   (@@ "vstd/map.rs:215:20: 215:71 (#0)" (> Unary (UnaryOp Trigger (TriggerAnnotation Trigger None)) (@@ "vstd/map.rs:215:20: 215:71 (#0)"
      (> Binary (BinaryOp HeightCompare :strictly_lt true :recursive_function_field true) (@@ "vstd/map.rs:215:61: 215:67 (#0)" (
         > Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.spec_index.") ((Typ TypParam "K") (Typ TypParam
            "V")
          ) () (AutospecUsage Final)
         ) ((@@ "vstd/map.rs:215:61: 215:62 (#0)" (> Var (VarIdent "m" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
            ((Typ TypParam "K") (Typ TypParam "V")) ())
          ) (@@ "vstd/map.rs:215:63: 215:66 (#0)" (> Var (VarIdent "key" (VarIdentDisambiguate VirParam))) (Typ TypParam "K")))
        ) (Typ TypParam "V")
       ) (@@ "vstd/map.rs:215:69: 215:70 (#0)" (> Var (VarIdent "m" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
         ((Typ TypParam "K") (Typ TypParam "V")) ()))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   true :broadcast_forall_only true :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method false :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/map.rs:278:1: 278:79 (#0)" (Function
  :name (Fun :path "vstd!map.axiom_map_ext_equal.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!map." :mode Proof :fuel 1 :typ_params (
   "K"
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/map.rs:278:50: 278:63 (#0)" (Param :name (VarIdent "m1" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!map.Map."
      ) ((Typ TypParam "K") (Typ TypParam "V")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/map.rs:278:65: 278:78 (#0)" (Param :name (VarIdent "m2" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!map.Map."
      ) ((Typ TypParam "K") (Typ TypParam "V")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/map.rs:278:79: 278:79 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Tuple 0) () ()
    ) :mode Proof :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require () :ensure (
   (@@ "vstd/map.rs:280:9: 283:10 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/map.rs:280:9: 280:31 (#0)" (> Unary (UnaryOp Trigger
        (TriggerAnnotation Trigger None)
       ) (@@ "vstd/map.rs:280:9: 280:31 (#0)" (> BinaryOpr (BinaryOpr ExtEq false (Typ Datatype (Dt Path "vstd!map.Map.") ((Typ TypParam
             "K"
            ) (Typ TypParam "V")
           ) ())
         ) (@@ "vstd/map.rs:280:21: 280:23 (#0)" (> Var (VarIdent "m1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
           ((Typ TypParam "K") (Typ TypParam "V")) ())
         ) (@@ "vstd/map.rs:280:28: 280:30 (#0)" (> Var (VarIdent "m2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
           ((Typ TypParam "K") (Typ TypParam "V")) ()))
        ) (Typ Bool))
      ) (Typ Bool)
     ) (@@ "vstd/map.rs:280:37: 283:10 (#0)" (> Block () (@@ "vstd/map.rs:281:17: 282:78 (#0)" (> Binary (BinaryOp And) (@@ "vstd/map.rs:281:17: 281:38 (#0)"
          (> BinaryOpr (BinaryOpr ExtEq false (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ())) (@@ "vstd/map.rs:281:17: 281:25 (#0)"
            (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.dom.") ((Typ TypParam "K") (Typ TypParam "V"))
              () (AutospecUsage Final)
             ) ((@@ "vstd/map.rs:281:17: 281:19 (#0)" (> Var (VarIdent "m1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
                ((Typ TypParam "K") (Typ TypParam "V")) ())))
            ) (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ())
           ) (@@ "vstd/map.rs:281:30: 281:38 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.dom.")
              ((Typ TypParam "K") (Typ TypParam "V")) () (AutospecUsage Final)
             ) ((@@ "vstd/map.rs:281:30: 281:32 (#0)" (> Var (VarIdent "m2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
                ((Typ TypParam "K") (Typ TypParam "V")) ())))
            ) (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ()))
          ) (Typ Bool)
         ) (@@ "vstd/map.rs:282:17: 282:78 (#0)" (> Quant (Forall) ((-> k~47 (Typ TypParam "K"))) (@@ "vstd/map.rs:282:17: 282:78 (#0)"
            (> Unary (UnaryOp Trigger (TriggerAnnotation AutoTrigger)) (@@ "vstd/map.rs:282:17: 282:78 (#0)" (> Binary (BinaryOp Implies)
               (@@ "vstd/map.rs:282:39: 282:59 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!set.impl&%0.contains.")
                  ((Typ TypParam "K")) () (AutospecUsage Final)
                 ) ((@@ "vstd/map.rs:282:39: 282:47 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.dom.")
                     ((Typ TypParam "K") (Typ TypParam "V")) () (AutospecUsage Final)
                    ) ((@@ "vstd/map.rs:282:39: 282:41 (#0)" (> Var (VarIdent "m1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
                       ((Typ TypParam "K") (Typ TypParam "V")) ())))
                   ) (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ())
                  ) (@@ "vstd/map.rs:282:57: 282:58 (#0)" (> Var (VarIdent "k" (VarIdentDisambiguate RustcId 47))) (Typ TypParam "K")))
                ) (Typ Bool)
               ) (@@ "vstd/map.rs:282:64: 282:78 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/map.rs:282:64: 282:69 (#0)" (> Call (CallTarget
                    Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.spec_index.") ((Typ TypParam "K") (Typ TypParam "V")) () (AutospecUsage
                     Final)
                   ) ((@@ "vstd/map.rs:282:64: 282:66 (#0)" (> Var (VarIdent "m1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
                      ((Typ TypParam "K") (Typ TypParam "V")) ())
                    ) (@@ "vstd/map.rs:282:67: 282:68 (#0)" (> Var (VarIdent "k" (VarIdentDisambiguate RustcId 47))) (Typ TypParam "K")))
                  ) (Typ TypParam "V")
                 ) (@@ "vstd/map.rs:282:73: 282:78 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.spec_index.")
                    ((Typ TypParam "K") (Typ TypParam "V")) () (AutospecUsage Final)
                   ) ((@@ "vstd/map.rs:282:73: 282:75 (#0)" (> Var (VarIdent "m2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
                      ((Typ TypParam "K") (Typ TypParam "V")) ())
                    ) (@@ "vstd/map.rs:282:76: 282:77 (#0)" (> Var (VarIdent "k" (VarIdentDisambiguate RustcId 47))) (Typ TypParam "K")))
                  ) (Typ TypParam "V"))
                ) (Typ Bool))
              ) (Typ Bool))
            ) (Typ Bool))
          ) (Typ Bool))
        ) (Typ Bool))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   true :broadcast_forall_only true :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method false :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/map.rs:288:1: 288:84 (#0)" (Function
  :name (Fun :path "vstd!map.axiom_map_ext_equal_deep.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!map." :mode Proof :fuel 1 :typ_params (
   "K"
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/map.rs:288:55: 288:68 (#0)" (Param :name (VarIdent "m1" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!map.Map."
      ) ((Typ TypParam "K") (Typ TypParam "V")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/map.rs:288:70: 288:83 (#0)" (Param :name (VarIdent "m2" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!map.Map."
      ) ((Typ TypParam "K") (Typ TypParam "V")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/map.rs:288:84: 288:84 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Tuple 0) () ()
    ) :mode Proof :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require () :ensure (
   (@@ "vstd/map.rs:290:9: 293:10 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/map.rs:290:9: 290:32 (#0)" (> Unary (UnaryOp Trigger
        (TriggerAnnotation Trigger None)
       ) (@@ "vstd/map.rs:290:9: 290:32 (#0)" (> BinaryOpr (BinaryOpr ExtEq true (Typ Datatype (Dt Path "vstd!map.Map.") ((Typ TypParam
             "K"
            ) (Typ TypParam "V")
           ) ())
         ) (@@ "vstd/map.rs:290:21: 290:23 (#0)" (> Var (VarIdent "m1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
           ((Typ TypParam "K") (Typ TypParam "V")) ())
         ) (@@ "vstd/map.rs:290:29: 290:31 (#0)" (> Var (VarIdent "m2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
           ((Typ TypParam "K") (Typ TypParam "V")) ()))
        ) (Typ Bool))
      ) (Typ Bool)
     ) (@@ "vstd/map.rs:290:38: 293:10 (#0)" (> Block () (@@ "vstd/map.rs:291:17: 292:80 (#0)" (> Binary (BinaryOp And) (@@ "vstd/map.rs:291:17: 291:39 (#0)"
          (> BinaryOpr (BinaryOpr ExtEq true (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ())) (@@ "vstd/map.rs:291:17: 291:25 (#0)"
            (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.dom.") ((Typ TypParam "K") (Typ TypParam "V"))
              () (AutospecUsage Final)
             ) ((@@ "vstd/map.rs:291:17: 291:19 (#0)" (> Var (VarIdent "m1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
                ((Typ TypParam "K") (Typ TypParam "V")) ())))
            ) (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ())
           ) (@@ "vstd/map.rs:291:31: 291:39 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.dom.")
              ((Typ TypParam "K") (Typ TypParam "V")) () (AutospecUsage Final)
             ) ((@@ "vstd/map.rs:291:31: 291:33 (#0)" (> Var (VarIdent "m2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
                ((Typ TypParam "K") (Typ TypParam "V")) ())))
            ) (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ()))
          ) (Typ Bool)
         ) (@@ "vstd/map.rs:292:17: 292:80 (#0)" (> Quant (Forall) ((-> k~47 (Typ TypParam "K"))) (@@ "vstd/map.rs:292:17: 292:80 (#0)"
            (> Unary (UnaryOp Trigger (TriggerAnnotation AutoTrigger)) (@@ "vstd/map.rs:292:17: 292:80 (#0)" (> Binary (BinaryOp Implies)
               (@@ "vstd/map.rs:292:39: 292:59 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!set.impl&%0.contains.")
                  ((Typ TypParam "K")) () (AutospecUsage Final)
                 ) ((@@ "vstd/map.rs:292:39: 292:47 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.dom.")
                     ((Typ TypParam "K") (Typ TypParam "V")) () (AutospecUsage Final)
                    ) ((@@ "vstd/map.rs:292:39: 292:41 (#0)" (> Var (VarIdent "m1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
                       ((Typ TypParam "K") (Typ TypParam "V")) ())))
                   ) (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam "K")) ())
                  ) (@@ "vstd/map.rs:292:57: 292:58 (#0)" (> Var (VarIdent "k" (VarIdentDisambiguate RustcId 47))) (Typ TypParam "K")))
                ) (Typ Bool)
               ) (@@ "vstd/map.rs:292:64: 292:80 (#0)" (> BinaryOpr (BinaryOpr ExtEq true (Typ TypParam "V")) (@@ "vstd/map.rs:292:64: 292:69 (#0)"
                  (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.spec_index.") ((Typ TypParam "K") (Typ TypParam
                      "V")
                    ) () (AutospecUsage Final)
                   ) ((@@ "vstd/map.rs:292:64: 292:66 (#0)" (> Var (VarIdent "m1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
                      ((Typ TypParam "K") (Typ TypParam "V")) ())
                    ) (@@ "vstd/map.rs:292:67: 292:68 (#0)" (> Var (VarIdent "k" (VarIdentDisambiguate RustcId 47))) (Typ TypParam "K")))
                  ) (Typ TypParam "V")
                 ) (@@ "vstd/map.rs:292:75: 292:80 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.spec_index.")
                    ((Typ TypParam "K") (Typ TypParam "V")) () (AutospecUsage Final)
                   ) ((@@ "vstd/map.rs:292:75: 292:77 (#0)" (> Var (VarIdent "m2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!map.Map.")
                      ((Typ TypParam "K") (Typ TypParam "V")) ())
                    ) (@@ "vstd/map.rs:292:78: 292:79 (#0)" (> Var (VarIdent "k" (VarIdentDisambiguate RustcId 47))) (Typ TypParam "K")))
                  ) (Typ TypParam "V"))
                ) (Typ Bool))
              ) (Typ Bool))
            ) (Typ Bool))
          ) (Typ Bool))
        ) (Typ Bool))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   true :broadcast_forall_only true :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method false :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/raw_ptr.rs:126:1: 130:11 (#0)" (Function
  :name (Fun :path "vstd!raw_ptr.impl&%2.arrow_0.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!raw_ptr." :mode Spec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/raw_ptr.rs:120:1: 131:2 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt
       Path "vstd!raw_ptr.MemContents."
      ) ((Typ TypParam "T")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/raw_ptr.rs:130:10: 130:11 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ
     TypParam "T"
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline true :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body (@@ "vstd/raw_ptr.rs:120:1: 131:2 (#0)" (> Block () (@@ "vstd/raw_ptr.rs:120:1: 131:2 (#0)" (> UnaryOpr (UnaryOpr Field
       (FieldOpr :datatype (Dt Path "vstd!raw_ptr.MemContents.") :variant "Init" :field "0" :get_variant true :check (VariantCheck
         None))
      ) (@@ "vstd/raw_ptr.rs:120:1: 131:2 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.")
        ((Typ TypParam "T")) ()))
     ) (Typ TypParam "T"))
   ) (Typ TypParam "T")
  ) :extra_dependencies ()))

(@ "vstd/raw_ptr.rs:231:5: 231:44 (#0)" (Function
  :name (Fun :path "vstd!raw_ptr.impl&%7.is_init.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!raw_ptr." :mode Spec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/raw_ptr.rs:231:30: 231:35 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate (
       TypDecoration Ref
      ) None (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ TypParam "T")) ())
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/raw_ptr.rs:231:40: 231:44 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ
     Bool
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline true :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body (@@ "vstd/raw_ptr.rs:231:45: 233:6 (#0)" (> Block () (@@ "vstd/raw_ptr.rs:232:9: 232:21 (#0)" (> UnaryOpr (UnaryOpr IsVariant
       :datatype (Dt Path "vstd!raw_ptr.MemContents.") :variant "Init"
      ) (@@ "vstd/raw_ptr.rs:232:9: 232:13 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
         Ref
        ) None (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ TypParam "T")) ())))
     ) (Typ Bool))
   ) (Typ Bool)
  ) :extra_dependencies ()))

(@ "vstd/raw_ptr.rs:236:5: 236:46 (#0)" (Function
  :name (Fun :path "vstd!raw_ptr.impl&%7.is_uninit.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!raw_ptr." :mode Spec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/raw_ptr.rs:236:32: 236:37 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate (
       TypDecoration Ref
      ) None (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ TypParam "T")) ())
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/raw_ptr.rs:236:42: 236:46 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ
     Bool
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline true :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body (@@ "vstd/raw_ptr.rs:236:47: 238:6 (#0)" (> Block () (@@ "vstd/raw_ptr.rs:237:9: 237:23 (#0)" (> UnaryOpr (UnaryOpr IsVariant
       :datatype (Dt Path "vstd!raw_ptr.MemContents.") :variant "Uninit"
      ) (@@ "vstd/raw_ptr.rs:237:9: 237:13 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
         Ref
        ) None (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ TypParam "T")) ())))
     ) (Typ Bool))
   ) (Typ Bool)
  ) :extra_dependencies ()))

(@ "vstd/raw_ptr.rs:241:5: 241:39 (#0)" (Function
  :name (Fun :path "vstd!raw_ptr.impl&%7.value.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!raw_ptr." :mode Spec :fuel 1 :typ_params (
   "T"
  ) :typ_bounds () :params (
   (@ "vstd/raw_ptr.rs:241:28: 241:33 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate (
       TypDecoration Ref
      ) None (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ TypParam "T")) ())
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/raw_ptr.rs:241:38: 241:39 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ
     TypParam "T"
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline true :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body (@@ "vstd/raw_ptr.rs:241:40: 243:6 (#0)" (> Block () (@@ "vstd/raw_ptr.rs:242:9: 242:16 (#0)" (> Call (CallTarget Fun
       (CallTargetKind Static) (Fun :path "vstd!raw_ptr.impl&%2.arrow_0.") ((Typ TypParam "T")) () (AutospecUsage Final)
      ) ((@@ "vstd/raw_ptr.rs:242:9: 242:13 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path
          "vstd!raw_ptr.MemContents."
         ) ((Typ TypParam "T")) ())))
     ) (Typ TypParam "T"))
   ) (Typ TypParam "T")
  ) :extra_dependencies ()))

(@ "vstd/seq.rs:42:5: 42:62 (#0)" (Function
  :name (Fun :path "vstd!seq.Seq.new.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to None)
  :owning_module "vstd!seq." :mode Spec :fuel 1 :typ_params (
   "A"
   "impl%1"
  ) :typ_bounds () :params (
   (@ "vstd/seq.rs:42:21: 42:29 (#0)" (Param :name (VarIdent "len" (VarIdentDisambiguate VirParam)) :typ (Typ Int (IntRange Nat))
     :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/seq.rs:42:31: 42:51 (#0)" (Param :name (VarIdent "f" (VarIdentDisambiguate VirParam)) :typ (Typ TypParam "impl%1")
     :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/seq.rs:42:56: 42:62 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Path "vstd!seq.Seq.") ((Typ TypParam "A")) ()
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method false :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body None :extra_dependencies ()))

(@ "vstd/seq.rs:46:5: 46:33 (#0)" (Function
  :name (Fun :path "vstd!seq.Seq.len.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to None)
  :owning_module "vstd!seq." :mode Spec :fuel 1 :typ_params (
   "A"
  ) :typ_bounds () :params (
   (@ "vstd/seq.rs:46:21: 46:25 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!seq.Seq."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/seq.rs:46:30: 46:33 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Int (IntRange
      Nat)
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body None :extra_dependencies ()))

(@ "vstd/seq.rs:53:5: 53:41 (#0)" (Function
  :name (Fun :path "vstd!seq.Seq.index.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to None)
  :owning_module "vstd!seq." :mode Spec :fuel 1 :typ_params (
   "A"
  ) :typ_bounds () :params (
   (@ "vstd/seq.rs:53:23: 53:27 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!seq.Seq."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/seq.rs:53:29: 53:35 (#0)" (Param :name (VarIdent "i" (VarIdentDisambiguate VirParam)) :typ (Typ Int (IntRange Int))
     :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/seq.rs:53:40: 53:41 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ TypParam
     "A"
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require (
   (@@ "vstd/seq.rs:55:18: 55:19 (#0)" (> Binary (BinaryOp And) (@@ "vstd/seq.rs:55:13: 55:14 (#0)" (> Binary (BinaryOp Inequality
        (InequalityOp Le)
       ) (@@ "vstd/seq.rs:55:13: 55:14 (#0)" (> Const (Constant Int 0)) (Typ Int (IntRange Nat))) (@@ "vstd/seq.rs:55:18: 55:19 (#0)"
        (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Int)))
      ) (Typ Bool)
     ) (@@ "vstd/seq.rs:55:18: 55:19 (#0)" (> Binary (BinaryOp Inequality (InequalityOp Lt)) (@@ "vstd/seq.rs:55:18: 55:19 (#0)"
        (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Int))
       ) (@@ "vstd/seq.rs:55:22: 55:32 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.len.") ((Typ TypParam
            "A")
          ) () (AutospecUsage Final)
         ) ((@@ "vstd/seq.rs:55:22: 55:26 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
            ((Typ TypParam "A")) ())))
        ) (Typ Int (IntRange Nat)))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec
  None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method true :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/seq.rs:60:5: 60:51 (#0)" (Function
  :name (Fun :path "vstd!seq.impl&%0.spec_index.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!seq." :mode Spec :fuel 1 :typ_params (
   "A"
  ) :typ_bounds () :params (
   (@ "vstd/seq.rs:60:33: 60:37 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!seq.Seq."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/seq.rs:60:39: 60:45 (#0)" (Param :name (VarIdent "i" (VarIdentDisambiguate VirParam)) :typ (Typ Int (IntRange Int))
     :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/seq.rs:60:50: 60:51 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ TypParam
     "A"
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require (
   (@@ "vstd/seq.rs:62:18: 62:19 (#0)" (> Binary (BinaryOp And) (@@ "vstd/seq.rs:62:13: 62:14 (#0)" (> Binary (BinaryOp Inequality
        (InequalityOp Le)
       ) (@@ "vstd/seq.rs:62:13: 62:14 (#0)" (> Const (Constant Int 0)) (Typ Int (IntRange Nat))) (@@ "vstd/seq.rs:62:18: 62:19 (#0)"
        (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Int)))
      ) (Typ Bool)
     ) (@@ "vstd/seq.rs:62:18: 62:19 (#0)" (> Binary (BinaryOp Inequality (InequalityOp Lt)) (@@ "vstd/seq.rs:62:18: 62:19 (#0)"
        (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Int))
       ) (@@ "vstd/seq.rs:62:22: 62:32 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.len.") ((Typ TypParam
            "A")
          ) () (AutospecUsage Final)
         ) ((@@ "vstd/seq.rs:62:22: 62:26 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
            ((Typ TypParam "A")) ())))
        ) (Typ Int (IntRange Nat)))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec
  None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks true :inline true :hidden () :broadcast_forall
   false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method true :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body (@@ "vstd/seq.rs:63:5: 65:6 (#0)" (> Block () (@@ "vstd/seq.rs:64:9: 64:22 (#0)" (> Call (CallTarget Fun (CallTargetKind
        Static
       ) (Fun :path "vstd!seq.Seq.index.") ((Typ TypParam "A")) () (AutospecUsage Final)
      ) ((@@ "vstd/seq.rs:64:9: 64:13 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
         ((Typ TypParam "A")) ())
       ) (@@ "vstd/seq.rs:64:20: 64:21 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Int))))
     ) (Typ TypParam "A"))
   ) (Typ TypParam "A")
  ) :extra_dependencies ()))

(@ "vstd/seq.rs:186:1: 186:71 (#0)" (Function
  :name (Fun :path "vstd!seq.axiom_seq_index_decreases.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!seq." :mode Proof :fuel 1 :typ_params (
   "A"
  ) :typ_bounds () :params (
   (@ "vstd/seq.rs:186:53: 186:62 (#0)" (Param :name (VarIdent "s" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!seq.Seq."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/seq.rs:186:64: 186:70 (#0)" (Param :name (VarIdent "i" (VarIdentDisambiguate VirParam)) :typ (Typ Int (IntRange Int))
     :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/seq.rs:186:71: 186:71 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Tuple 0) () ()
    ) :mode Proof :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require (
   (@@ "vstd/seq.rs:188:14: 188:15 (#0)" (> Binary (BinaryOp And) (@@ "vstd/seq.rs:188:9: 188:10 (#0)" (> Binary (BinaryOp Inequality
        (InequalityOp Le)
       ) (@@ "vstd/seq.rs:188:9: 188:10 (#0)" (> Const (Constant Int 0)) (Typ Int (IntRange Nat))) (@@ "vstd/seq.rs:188:14: 188:15 (#0)"
        (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Int)))
      ) (Typ Bool)
     ) (@@ "vstd/seq.rs:188:14: 188:15 (#0)" (> Binary (BinaryOp Inequality (InequalityOp Lt)) (@@ "vstd/seq.rs:188:14: 188:15 (#0)"
        (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Int))
       ) (@@ "vstd/seq.rs:188:18: 188:25 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.len.") ((Typ
            TypParam "A")
          ) () (AutospecUsage Final)
         ) ((@@ "vstd/seq.rs:188:18: 188:19 (#0)" (> Var (VarIdent "s" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
            ((Typ TypParam "A")) ())))
        ) (Typ Int (IntRange Nat)))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :ensure (
   (@@ "/home/shinaikakishita/projects/tlsf-verif/verus/source/builtin/src/lib.rs:1430:9: 1430:68 (#1668)" (> Unary (UnaryOp Trigger
      (TriggerAnnotation Trigger None)
     ) (@@ "/home/shinaikakishita/projects/tlsf-verif/verus/source/builtin/src/lib.rs:1430:9: 1430:68 (#1668)" (> Binary (BinaryOp
        HeightCompare :strictly_lt true :recursive_function_field false
       ) (@@ "vstd/seq.rs:190:40: 190:44 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.impl&%0.spec_index.")
          ((Typ TypParam "A")) () (AutospecUsage Final)
         ) ((@@ "vstd/seq.rs:190:40: 190:41 (#0)" (> Var (VarIdent "s" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
            ((Typ TypParam "A")) ())
          ) (@@ "vstd/seq.rs:190:42: 190:43 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Int))))
        ) (Typ TypParam "A")
       ) (@@ "vstd/seq.rs:190:35: 190:36 (#0)" (> Var (VarIdent "s" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
         ((Typ TypParam "A")) ()))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   true :broadcast_forall_only true :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method false :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/seq.rs:231:1: 231:76 (#0)" (Function
  :name (Fun :path "vstd!seq.axiom_seq_new_len.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!seq." :mode Proof :fuel 1 :typ_params (
   "A"
  ) :typ_bounds () :params (
   (@ "vstd/seq.rs:231:45: 231:53 (#0)" (Param :name (VarIdent "len" (VarIdentDisambiguate VirParam)) :typ (Typ Int (IntRange Nat))
     :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/seq.rs:231:55: 231:75 (#0)" (Param :name (VarIdent "f" (VarIdentDisambiguate VirParam)) :typ (Typ SpecFn ((Typ Int (IntRange
         Int))
      ) (Typ TypParam "A")
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/seq.rs:231:76: 231:76 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Tuple 0) () ()
    ) :mode Proof :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require () :ensure (
   (@@ "vstd/seq.rs:233:9: 233:49 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/seq.rs:233:20: 233:42 (#0)" (> Unary (UnaryOp Trigger
        (TriggerAnnotation Trigger None)
       ) (@@ "vstd/seq.rs:233:20: 233:42 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.len.") ((Typ
            TypParam "A")
          ) () (AutospecUsage Final)
         ) ((@@ "vstd/seq.rs:233:20: 233:36 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.new.") ((Typ
               TypParam "A"
              ) (Typ SpecFn ((Typ Int (IntRange Int))) (Typ TypParam "A"))
             ) ((ImplPath TraitImplPath "builtin!impl&%57.")) (AutospecUsage Final)
            ) ((@@ "vstd/seq.rs:233:29: 233:32 (#0)" (> Var (VarIdent "len" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Nat)))
             (@@ "vstd/seq.rs:233:34: 233:35 (#0)" (> Var (VarIdent "f" (VarIdentDisambiguate VirParam))) (Typ SpecFn ((Typ Int (IntRange Int)))
               (Typ TypParam "A"))))
           ) (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ TypParam "A")) ())))
        ) (Typ Int (IntRange Nat)))
      ) (Typ Int (IntRange Nat))
     ) (@@ "vstd/seq.rs:233:46: 233:49 (#0)" (> Var (VarIdent "len" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Nat)))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   true :broadcast_forall_only true :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method false :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/seq.rs:238:1: 238:86 (#0)" (Function
  :name (Fun :path "vstd!seq.axiom_seq_new_index.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!seq." :mode Proof :fuel 1 :typ_params (
   "A"
  ) :typ_bounds () :params (
   (@ "vstd/seq.rs:238:47: 238:55 (#0)" (Param :name (VarIdent "len" (VarIdentDisambiguate VirParam)) :typ (Typ Int (IntRange Nat))
     :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/seq.rs:238:57: 238:77 (#0)" (Param :name (VarIdent "f" (VarIdentDisambiguate VirParam)) :typ (Typ SpecFn ((Typ Int (IntRange
         Int))
      ) (Typ TypParam "A")
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/seq.rs:238:79: 238:85 (#0)" (Param :name (VarIdent "i" (VarIdentDisambiguate VirParam)) :typ (Typ Int (IntRange Int))
     :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/seq.rs:238:86: 238:86 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Tuple 0) () ()
    ) :mode Proof :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require (
   (@@ "vstd/seq.rs:240:14: 240:15 (#0)" (> Binary (BinaryOp And) (@@ "vstd/seq.rs:240:9: 240:10 (#0)" (> Binary (BinaryOp Inequality
        (InequalityOp Le)
       ) (@@ "vstd/seq.rs:240:9: 240:10 (#0)" (> Const (Constant Int 0)) (Typ Int (IntRange Nat))) (@@ "vstd/seq.rs:240:14: 240:15 (#0)"
        (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Int)))
      ) (Typ Bool)
     ) (@@ "vstd/seq.rs:240:14: 240:15 (#0)" (> Binary (BinaryOp Inequality (InequalityOp Lt)) (@@ "vstd/seq.rs:240:14: 240:15 (#0)"
        (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Int))
       ) (@@ "vstd/seq.rs:240:18: 240:21 (#0)" (> Var (VarIdent "len" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Nat)))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :ensure (
   (@@ "vstd/seq.rs:242:9: 242:47 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/seq.rs:242:9: 242:39 (#0)" (> Unary (UnaryOp Trigger
        (TriggerAnnotation Trigger None)
       ) (@@ "vstd/seq.rs:242:9: 242:39 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.impl&%0.spec_index.")
          ((Typ TypParam "A")) () (AutospecUsage Final)
         ) ((@@ "vstd/seq.rs:242:20: 242:36 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.new.") ((Typ
               TypParam "A"
              ) (Typ SpecFn ((Typ Int (IntRange Int))) (Typ TypParam "A"))
             ) ((ImplPath TraitImplPath "builtin!impl&%57.")) (AutospecUsage Final)
            ) ((@@ "vstd/seq.rs:242:29: 242:32 (#0)" (> Var (VarIdent "len" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Nat)))
             (@@ "vstd/seq.rs:242:34: 242:35 (#0)" (> Var (VarIdent "f" (VarIdentDisambiguate VirParam))) (Typ SpecFn ((Typ Int (IntRange Int)))
               (Typ TypParam "A"))))
           ) (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ TypParam "A")) ())
          ) (@@ "vstd/seq.rs:242:37: 242:38 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Int))))
        ) (Typ TypParam "A"))
      ) (Typ TypParam "A")
     ) (@@ "vstd/seq.rs:242:43: 242:47 (#0)" (> Call (CallTarget FnSpec (@@ "vstd/seq.rs:242:43: 242:44 (#0)" (> Var (VarIdent "f" (
            VarIdentDisambiguate VirParam))
         ) (Typ Decorate (TypDecoration Ref) None (Typ SpecFn ((Typ Int (IntRange Int))) (Typ TypParam "A"))))
       ) ((@@ "vstd/seq.rs:242:45: 242:46 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Int))))
      ) (Typ TypParam "A"))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   true :broadcast_forall_only true :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method false :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/seq.rs:301:1: 301:70 (#0)" (Function
  :name (Fun :path "vstd!seq.axiom_seq_ext_equal.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!seq." :mode Proof :fuel 1 :typ_params (
   "A"
  ) :typ_bounds () :params (
   (@ "vstd/seq.rs:301:47: 301:57 (#0)" (Param :name (VarIdent "s1" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!seq.Seq."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/seq.rs:301:59: 301:69 (#0)" (Param :name (VarIdent "s2" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!seq.Seq."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/seq.rs:301:70: 301:70 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Tuple 0) () ()
    ) :mode Proof :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require () :ensure (
   (@@ "vstd/seq.rs:303:9: 306:10 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/seq.rs:303:9: 303:31 (#0)" (> Unary (UnaryOp Trigger
        (TriggerAnnotation Trigger None)
       ) (@@ "vstd/seq.rs:303:9: 303:31 (#0)" (> BinaryOpr (BinaryOpr ExtEq false (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ TypParam
             "A")
           ) ())
         ) (@@ "vstd/seq.rs:303:21: 303:23 (#0)" (> Var (VarIdent "s1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
           ((Typ TypParam "A")) ())
         ) (@@ "vstd/seq.rs:303:28: 303:30 (#0)" (> Var (VarIdent "s2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
           ((Typ TypParam "A")) ()))
        ) (Typ Bool))
      ) (Typ Bool)
     ) (@@ "vstd/seq.rs:303:37: 306:10 (#0)" (> Block () (@@ "vstd/seq.rs:304:17: 305:68 (#0)" (> Binary (BinaryOp And) (@@ "vstd/seq.rs:304:17: 304:37 (#0)"
          (> Binary (BinaryOp Eq Spec) (@@ "vstd/seq.rs:304:17: 304:25 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path
               "vstd!seq.Seq.len."
              ) ((Typ TypParam "A")) () (AutospecUsage Final)
             ) ((@@ "vstd/seq.rs:304:17: 304:19 (#0)" (> Var (VarIdent "s1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
                ((Typ TypParam "A")) ())))
            ) (Typ Int (IntRange Nat))
           ) (@@ "vstd/seq.rs:304:29: 304:37 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.len.") ((Typ
                TypParam "A")
              ) () (AutospecUsage Final)
             ) ((@@ "vstd/seq.rs:304:29: 304:31 (#0)" (> Var (VarIdent "s2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
                ((Typ TypParam "A")) ())))
            ) (Typ Int (IntRange Nat)))
          ) (Typ Bool)
         ) (@@ "vstd/seq.rs:305:17: 305:68 (#0)" (> Quant (Forall) ((-> i~47 (Typ Int (IntRange Int)))) (@@ "vstd/seq.rs:305:32: 305:68 (#0)"
            (> Binary (BinaryOp Implies) (@@ "vstd/seq.rs:305:37: 305:38 (#0)" (> Binary (BinaryOp And) (@@ "vstd/seq.rs:305:32: 305:33 (#0)"
                (> Binary (BinaryOp Inequality (InequalityOp Le)) (@@ "vstd/seq.rs:305:32: 305:33 (#0)" (> Const (Constant Int 0)) (Typ Int
                   (IntRange Nat))
                 ) (@@ "vstd/seq.rs:305:37: 305:38 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate RustcId 47))) (Typ Int (IntRange Int)))
                ) (Typ Bool)
               ) (@@ "vstd/seq.rs:305:37: 305:38 (#0)" (> Binary (BinaryOp Inequality (InequalityOp Lt)) (@@ "vstd/seq.rs:305:37: 305:38 (#0)"
                  (> Var (VarIdent "i" (VarIdentDisambiguate RustcId 47))) (Typ Int (IntRange Int))
                 ) (@@ "vstd/seq.rs:305:41: 305:49 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.len.") ((Typ
                      TypParam "A")
                    ) () (AutospecUsage Final)
                   ) ((@@ "vstd/seq.rs:305:41: 305:43 (#0)" (> Var (VarIdent "s1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
                      ((Typ TypParam "A")) ())))
                  ) (Typ Int (IntRange Nat)))
                ) (Typ Bool))
              ) (Typ Bool)
             ) (@@ "vstd/seq.rs:305:54: 305:68 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/seq.rs:305:54: 305:59 (#0)" (> Call (CallTarget
                  Fun (CallTargetKind Static) (Fun :path "vstd!seq.impl&%0.spec_index.") ((Typ TypParam "A")) () (AutospecUsage Final)
                 ) ((@@ "vstd/seq.rs:305:54: 305:56 (#0)" (> Var (VarIdent "s1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
                    ((Typ TypParam "A")) ())
                  ) (@@ "vstd/seq.rs:305:57: 305:58 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate RustcId 47))) (Typ Int (IntRange Int))))
                ) (Typ TypParam "A")
               ) (@@ "vstd/seq.rs:305:63: 305:68 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.impl&%0.spec_index.")
                  ((Typ TypParam "A")) () (AutospecUsage Final)
                 ) ((@@ "vstd/seq.rs:305:63: 305:65 (#0)" (> Var (VarIdent "s2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
                    ((Typ TypParam "A")) ())
                  ) (@@ "vstd/seq.rs:305:66: 305:67 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate RustcId 47))) (Typ Int (IntRange Int))))
                ) (Typ TypParam "A"))
              ) (Typ Bool))
            ) (Typ Bool))
          ) (Typ Bool))
        ) (Typ Bool))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   true :broadcast_forall_only true :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method false :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/seq.rs:311:1: 311:75 (#0)" (Function
  :name (Fun :path "vstd!seq.axiom_seq_ext_equal_deep.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!seq." :mode Proof :fuel 1 :typ_params (
   "A"
  ) :typ_bounds () :params (
   (@ "vstd/seq.rs:311:52: 311:62 (#0)" (Param :name (VarIdent "s1" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!seq.Seq."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/seq.rs:311:64: 311:74 (#0)" (Param :name (VarIdent "s2" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!seq.Seq."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/seq.rs:311:75: 311:75 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Tuple 0) () ()
    ) :mode Proof :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require () :ensure (
   (@@ "vstd/seq.rs:313:9: 316:10 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/seq.rs:313:9: 313:32 (#0)" (> Unary (UnaryOp Trigger
        (TriggerAnnotation Trigger None)
       ) (@@ "vstd/seq.rs:313:9: 313:32 (#0)" (> BinaryOpr (BinaryOpr ExtEq true (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ TypParam
             "A")
           ) ())
         ) (@@ "vstd/seq.rs:313:21: 313:23 (#0)" (> Var (VarIdent "s1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
           ((Typ TypParam "A")) ())
         ) (@@ "vstd/seq.rs:313:29: 313:31 (#0)" (> Var (VarIdent "s2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
           ((Typ TypParam "A")) ()))
        ) (Typ Bool))
      ) (Typ Bool)
     ) (@@ "vstd/seq.rs:313:38: 316:10 (#0)" (> Block () (@@ "vstd/seq.rs:314:17: 315:70 (#0)" (> Binary (BinaryOp And) (@@ "vstd/seq.rs:314:17: 314:37 (#0)"
          (> Binary (BinaryOp Eq Spec) (@@ "vstd/seq.rs:314:17: 314:25 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path
               "vstd!seq.Seq.len."
              ) ((Typ TypParam "A")) () (AutospecUsage Final)
             ) ((@@ "vstd/seq.rs:314:17: 314:19 (#0)" (> Var (VarIdent "s1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
                ((Typ TypParam "A")) ())))
            ) (Typ Int (IntRange Nat))
           ) (@@ "vstd/seq.rs:314:29: 314:37 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.len.") ((Typ
                TypParam "A")
              ) () (AutospecUsage Final)
             ) ((@@ "vstd/seq.rs:314:29: 314:31 (#0)" (> Var (VarIdent "s2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
                ((Typ TypParam "A")) ())))
            ) (Typ Int (IntRange Nat)))
          ) (Typ Bool)
         ) (@@ "vstd/seq.rs:315:17: 315:70 (#0)" (> Quant (Forall) ((-> i~47 (Typ Int (IntRange Int)))) (@@ "vstd/seq.rs:315:32: 315:70 (#0)"
            (> Binary (BinaryOp Implies) (@@ "vstd/seq.rs:315:37: 315:38 (#0)" (> Binary (BinaryOp And) (@@ "vstd/seq.rs:315:32: 315:33 (#0)"
                (> Binary (BinaryOp Inequality (InequalityOp Le)) (@@ "vstd/seq.rs:315:32: 315:33 (#0)" (> Const (Constant Int 0)) (Typ Int
                   (IntRange Nat))
                 ) (@@ "vstd/seq.rs:315:37: 315:38 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate RustcId 47))) (Typ Int (IntRange Int)))
                ) (Typ Bool)
               ) (@@ "vstd/seq.rs:315:37: 315:38 (#0)" (> Binary (BinaryOp Inequality (InequalityOp Lt)) (@@ "vstd/seq.rs:315:37: 315:38 (#0)"
                  (> Var (VarIdent "i" (VarIdentDisambiguate RustcId 47))) (Typ Int (IntRange Int))
                 ) (@@ "vstd/seq.rs:315:41: 315:49 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.len.") ((Typ
                      TypParam "A")
                    ) () (AutospecUsage Final)
                   ) ((@@ "vstd/seq.rs:315:41: 315:43 (#0)" (> Var (VarIdent "s1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
                      ((Typ TypParam "A")) ())))
                  ) (Typ Int (IntRange Nat)))
                ) (Typ Bool))
              ) (Typ Bool)
             ) (@@ "vstd/seq.rs:315:54: 315:70 (#0)" (> BinaryOpr (BinaryOpr ExtEq true (Typ TypParam "A")) (@@ "vstd/seq.rs:315:54: 315:59 (#0)"
                (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.impl&%0.spec_index.") ((Typ TypParam "A")) () (AutospecUsage
                   Final)
                 ) ((@@ "vstd/seq.rs:315:54: 315:56 (#0)" (> Var (VarIdent "s1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
                    ((Typ TypParam "A")) ())
                  ) (@@ "vstd/seq.rs:315:57: 315:58 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate RustcId 47))) (Typ Int (IntRange Int))))
                ) (Typ TypParam "A")
               ) (@@ "vstd/seq.rs:315:65: 315:70 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.impl&%0.spec_index.")
                  ((Typ TypParam "A")) () (AutospecUsage Final)
                 ) ((@@ "vstd/seq.rs:315:65: 315:67 (#0)" (> Var (VarIdent "s2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!seq.Seq.")
                    ((Typ TypParam "A")) ())
                  ) (@@ "vstd/seq.rs:315:68: 315:69 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate RustcId 47))) (Typ Int (IntRange Int))))
                ) (Typ TypParam "A"))
              ) (Typ Bool))
            ) (Typ Bool))
          ) (Typ Bool))
        ) (Typ Bool))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   true :broadcast_forall_only true :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method false :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/set.rs:51:5: 51:45 (#0)" (Function
  :name (Fun :path "vstd!set.impl&%0.contains.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!set." :mode Spec :fuel 1 :typ_params (
   "A"
  ) :typ_bounds () :params (
   (@ "vstd/set.rs:51:26: 51:30 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!set.Set."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/set.rs:51:32: 51:36 (#0)" (Param :name (VarIdent "a" (VarIdentDisambiguate VirParam)) :typ (Typ TypParam "A") :mode
     Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/set.rs:51:41: 51:45 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Bool)
    :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body None :extra_dependencies ()))

(@ "vstd/set.rs:127:5: 127:37 (#0)" (Function
  :name (Fun :path "vstd!set.impl&%0.finite.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!set." :mode Spec :fuel 1 :typ_params (
   "A"
  ) :typ_bounds () :params (
   (@ "vstd/set.rs:127:24: 127:28 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!set.Set."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/set.rs:127:33: 127:37 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Bool)
    :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body None :extra_dependencies ()))

(@ "vstd/set.rs:255:1: 255:70 (#0)" (Function
  :name (Fun :path "vstd!set.axiom_set_ext_equal.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!set." :mode Proof :fuel 1 :typ_params (
   "A"
  ) :typ_bounds () :params (
   (@ "vstd/set.rs:255:47: 255:57 (#0)" (Param :name (VarIdent "s1" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!set.Set."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/set.rs:255:59: 255:69 (#0)" (Param :name (VarIdent "s2" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!set.Set."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/set.rs:255:70: 255:70 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Tuple 0) () ()
    ) :mode Proof :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require () :ensure (
   (@@ "vstd/set.rs:257:9: 257:84 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/set.rs:257:9: 257:31 (#0)" (> Unary (UnaryOp Trigger
        (TriggerAnnotation Trigger None)
       ) (@@ "vstd/set.rs:257:9: 257:31 (#0)" (> BinaryOpr (BinaryOpr ExtEq false (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam
             "A")
           ) ())
         ) (@@ "vstd/set.rs:257:21: 257:23 (#0)" (> Var (VarIdent "s1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!set.Set.")
           ((Typ TypParam "A")) ())
         ) (@@ "vstd/set.rs:257:28: 257:30 (#0)" (> Var (VarIdent "s2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!set.Set.")
           ((Typ TypParam "A")) ()))
        ) (Typ Bool))
      ) (Typ Bool)
     ) (@@ "vstd/set.rs:257:37: 257:84 (#0)" (> Quant (Forall) ((-> a~32 (Typ TypParam "A"))) (@@ "vstd/set.rs:257:51: 257:83 (#0)"
        (> Binary (BinaryOp Eq Spec) (@@ "vstd/set.rs:257:51: 257:65 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path
             "vstd!set.impl&%0.contains."
            ) ((Typ TypParam "A")) () (AutospecUsage Final)
           ) ((@@ "vstd/set.rs:257:51: 257:53 (#0)" (> Var (VarIdent "s1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!set.Set.")
              ((Typ TypParam "A")) ())
            ) (@@ "vstd/set.rs:257:63: 257:64 (#0)" (> Var (VarIdent "a" (VarIdentDisambiguate RustcId 32))) (Typ TypParam "A")))
          ) (Typ Bool)
         ) (@@ "vstd/set.rs:257:69: 257:83 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!set.impl&%0.contains.")
            ((Typ TypParam "A")) () (AutospecUsage Final)
           ) ((@@ "vstd/set.rs:257:69: 257:71 (#0)" (> Var (VarIdent "s2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!set.Set.")
              ((Typ TypParam "A")) ())
            ) (@@ "vstd/set.rs:257:81: 257:82 (#0)" (> Var (VarIdent "a" (VarIdentDisambiguate RustcId 32))) (Typ TypParam "A")))
          ) (Typ Bool))
        ) (Typ Bool))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   true :broadcast_forall_only true :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method false :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/set.rs:262:1: 262:75 (#0)" (Function
  :name (Fun :path "vstd!set.axiom_set_ext_equal_deep.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!set." :mode Proof :fuel 1 :typ_params (
   "A"
  ) :typ_bounds () :params (
   (@ "vstd/set.rs:262:52: 262:62 (#0)" (Param :name (VarIdent "s1" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!set.Set."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
   (@ "vstd/set.rs:262:64: 262:74 (#0)" (Param :name (VarIdent "s2" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype (Dt Path
       "vstd!set.Set."
      ) ((Typ TypParam "A")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/set.rs:262:75: 262:75 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
     (Dt Tuple 0) () ()
    ) :mode Proof :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require () :ensure (
   (@@ "vstd/set.rs:264:9: 264:47 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/set.rs:264:9: 264:32 (#0)" (> Unary (UnaryOp Trigger
        (TriggerAnnotation Trigger None)
       ) (@@ "vstd/set.rs:264:9: 264:32 (#0)" (> BinaryOpr (BinaryOpr ExtEq true (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam
             "A")
           ) ())
         ) (@@ "vstd/set.rs:264:21: 264:23 (#0)" (> Var (VarIdent "s1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!set.Set.")
           ((Typ TypParam "A")) ())
         ) (@@ "vstd/set.rs:264:29: 264:31 (#0)" (> Var (VarIdent "s2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!set.Set.")
           ((Typ TypParam "A")) ()))
        ) (Typ Bool))
      ) (Typ Bool)
     ) (@@ "vstd/set.rs:264:38: 264:47 (#0)" (> BinaryOpr (BinaryOpr ExtEq false (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ TypParam
           "A")
         ) ())
       ) (@@ "vstd/set.rs:264:38: 264:40 (#0)" (> Var (VarIdent "s1" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!set.Set.")
         ((Typ TypParam "A")) ())
       ) (@@ "vstd/set.rs:264:45: 264:47 (#0)" (> Var (VarIdent "s2" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Path "vstd!set.Set.")
         ((Typ TypParam "A")) ()))
      ) (Typ Bool))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   true :broadcast_forall_only true :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method false :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/simple_pptr.rs:222:5: 222:44 (#0)" (Function
  :name (Fun :path "vstd!simple_pptr.impl&%1.pptr.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!simple_pptr." :mode Spec :fuel 1 :typ_params (
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/simple_pptr.rs:222:27: 222:32 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ())
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/simple_pptr.rs:222:37: 222:44 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ()) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline true :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body (@@ "vstd/simple_pptr.rs:222:45: 224:6 (#0)" (> Block () (@@ "vstd/simple_pptr.rs:223:9: 223:39 (#0)" (> Ctor (Dt Path
       "vstd!simple_pptr.PPtr."
      ) "PPtr" ((-> 0 (@@ "vstd/simple_pptr.rs:223:14: 223:25 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.addr.")
           ((Typ TypParam "V")) () (AutospecUsage Final)
          ) ((@@ "vstd/simple_pptr.rs:223:14: 223:18 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt
              Path "vstd!simple_pptr.PointsTo."
             ) ((Typ TypParam "V")) ())))
         ) (Typ Int (IntRange USize)))
       ) (-> 1 (@@ "vstd/simple_pptr.rs:223:27: 223:38 (#0)" (> Ctor (Dt Path "core!marker.PhantomData.") "PhantomData" () None) (
          Typ Datatype (Dt Path "core!marker.PhantomData.") ((Typ TypParam "V")) ())))
      ) None
     ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ()))
   ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ())
  ) :extra_dependencies ()))

(@ "vstd/simple_pptr.rs:226:5: 226:43 (#0)" (Function
  :name (Fun :path "vstd!simple_pptr.impl&%1.addr.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!simple_pptr." :mode Spec :fuel 1 :typ_params (
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/simple_pptr.rs:226:29: 226:33 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
      (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/simple_pptr.rs:226:38: 226:43 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ Int (IntRange USize)) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body None :extra_dependencies ()))

(@ "vstd/simple_pptr.rs:248:5: 248:61 (#0)" (Function
  :name (Fun :path "vstd!simple_pptr.impl&%1.mem_contents.") :proxy None :kind (FunctionKind Static) :visibility (Visibility
   :restricted_to None
  ) :owning_module "vstd!simple_pptr." :mode Spec :fuel 1 :typ_params (
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/simple_pptr.rs:248:37: 248:42 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ())
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/simple_pptr.rs:248:47: 248:61 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ TypParam "V")) ()) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body None :extra_dependencies ()))

(@ "vstd/simple_pptr.rs:259:5: 259:44 (#0)" (Function
  :name (Fun :path "vstd!simple_pptr.impl&%1.is_init.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!simple_pptr." :mode Spec :fuel 1 :typ_params (
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/simple_pptr.rs:259:30: 259:35 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ())
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/simple_pptr.rs:259:40: 259:44 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ Bool) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline true :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body (@@ "vstd/simple_pptr.rs:259:45: 261:6 (#0)" (> Block () (@@ "vstd/simple_pptr.rs:260:9: 260:38 (#0)" (> Call (CallTarget
       Fun (CallTargetKind Static) (Fun :path "vstd!raw_ptr.impl&%7.is_init.") ((Typ TypParam "V")) () (AutospecUsage Final)
      ) ((@@ "vstd/simple_pptr.rs:260:9: 260:28 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.mem_contents.")
          ((Typ TypParam "V")) () (AutospecUsage Final)
         ) ((@@ "vstd/simple_pptr.rs:260:9: 260:13 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
             Ref
            ) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))))
        ) (Typ Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ TypParam "V")) ()))))
     ) (Typ Bool))
   ) (Typ Bool)
  ) :extra_dependencies ()))

(@ "vstd/simple_pptr.rs:264:5: 264:46 (#0)" (Function
  :name (Fun :path "vstd!simple_pptr.impl&%1.is_uninit.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!simple_pptr." :mode Spec :fuel 1 :typ_params (
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/simple_pptr.rs:264:32: 264:37 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ())
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/simple_pptr.rs:264:42: 264:46 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ Bool) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline true :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body (@@ "vstd/simple_pptr.rs:264:47: 266:6 (#0)" (> Block () (@@ "vstd/simple_pptr.rs:265:9: 265:40 (#0)" (> Call (CallTarget
       Fun (CallTargetKind Static) (Fun :path "vstd!raw_ptr.impl&%7.is_uninit.") ((Typ TypParam "V")) () (AutospecUsage Final)
      ) ((@@ "vstd/simple_pptr.rs:265:9: 265:28 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.mem_contents.")
          ((Typ TypParam "V")) () (AutospecUsage Final)
         ) ((@@ "vstd/simple_pptr.rs:265:9: 265:13 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
             Ref
            ) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))))
        ) (Typ Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ TypParam "V")) ()))))
     ) (Typ Bool))
   ) (Typ Bool)
  ) :extra_dependencies ()))

(@ "vstd/simple_pptr.rs:269:5: 269:39 (#0)" (Function
  :name (Fun :path "vstd!simple_pptr.impl&%1.value.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!simple_pptr." :mode Spec :fuel 1 :typ_params (
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/simple_pptr.rs:269:28: 269:33 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ())
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/simple_pptr.rs:269:38: 269:39 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ TypParam "V") :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require (
   (@@ "vstd/simple_pptr.rs:271:13: 271:27 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.is_init.")
      ((Typ TypParam "V")) () (AutospecUsage Final)
     ) ((@@ "vstd/simple_pptr.rs:271:13: 271:17 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
         Ref
        ) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))))
    ) (Typ Bool))
  ) :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec
  None :item_kind (ItemKind Function) :publish true :attrs (FunctionAttrs :uses_ghost_blocks true :inline true :hidden () :broadcast_forall
   false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method true :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body (@@ "vstd/simple_pptr.rs:272:5: 274:6 (#0)" (> Block () (@@ "vstd/simple_pptr.rs:273:9: 273:36 (#0)" (> Call (CallTarget
       Fun (CallTargetKind Static) (Fun :path "vstd!raw_ptr.impl&%7.value.") ((Typ TypParam "V")) () (AutospecUsage Final)
      ) ((@@ "vstd/simple_pptr.rs:273:9: 273:28 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.mem_contents.")
          ((Typ TypParam "V")) () (AutospecUsage Final)
         ) ((@@ "vstd/simple_pptr.rs:273:9: 273:13 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
             Ref
            ) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))))
        ) (Typ Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ TypParam "V")) ()))))
     ) (Typ TypParam "V"))
   ) (Typ TypParam "V")
  ) :extra_dependencies ()))

(@ "vstd/simple_pptr.rs:323:5: 323:34 (#0)" (Function
  :name (Fun :path "vstd!simple_pptr.impl&%2.clone.") :proxy None :kind (FunctionKind TraitMethodImpl :method (Fun :path "core!clone.Clone.clone.")
   :impl_path "vstd!simple_pptr.impl&%2." :trait_path "core!clone.Clone." :trait_typ_args ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.")
     ((Typ TypParam "V")) ())
   ) :inherit_body_from None
  ) :visibility (Visibility :restricted_to None) :owning_module "vstd!simple_pptr." :mode Exec :fuel 1 :typ_params (
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/simple_pptr.rs:323:14: 323:19 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ())
     ) :mode Exec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/simple_pptr.rs:323:30: 323:34 (#0)" (Param :name (VarIdent "res" (VarIdentDisambiguate VirParam)) :typ (Typ
     Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ()
    ) :mode Exec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure (
   (@@ "vstd/simple_pptr.rs:325:13: 325:25 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/simple_pptr.rs:325:13: 325:16 (#0)" (> Var
       (VarIdent "res" (VarIdentDisambiguate VirParam))
      ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ())
     ) (@@ "vstd/simple_pptr.rs:325:21: 325:25 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt
        Path "vstd!simple_pptr.PPtr."
       ) ((Typ TypParam "V")) ()))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method true :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body None :extra_dependencies ()))

(@ "vstd/simple_pptr.rs:338:5: 338:59 (#0)" (Function
  :name (Fun :path "vstd!simple_pptr.impl&%4.empty.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!simple_pptr." :mode Exec :fuel 1 :typ_params (
   "V"
  ) :typ_bounds () :params () :ret (@ "vstd/simple_pptr.rs:338:28: 338:59 (#0)" (Param :name (VarIdent "pt" (VarIdentDisambiguate
      VirParam)
    ) :typ (Typ Datatype (Dt Tuple 2) ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ()) (Typ Decorate (
        TypDecoration Tracked
       ) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))
     ) ()
    ) :mode Exec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure (
   (@@ "vstd/simple_pptr.rs:340:13: 340:33 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/simple_pptr.rs:340:13: 340:25 (#0)" (> Call
       (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.pptr.") ((Typ TypParam "V")) () (AutospecUsage
         Final)
       ) ((@@ "vstd/simple_pptr.rs:340:13: 340:17 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Tuple 2) :variant "tuple%2"
            :field "1" :get_variant false :check (VariantCheck None))
          ) (@@ "vstd/simple_pptr.rs:340:13: 340:15 (#0)" (> Var (VarIdent "pt" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Tuple
             2
            ) ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ()) (Typ Decorate (TypDecoration Tracked) None (Typ
               Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))
            ) ()))
         ) (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))))
      ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ())
     ) (@@ "vstd/simple_pptr.rs:340:29: 340:33 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Tuple 2) :variant "tuple%2"
         :field "0" :get_variant false :check (VariantCheck None))
       ) (@@ "vstd/simple_pptr.rs:340:29: 340:31 (#0)" (> Var (VarIdent "pt" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Tuple
          2
         ) ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ()) (Typ Decorate (TypDecoration Tracked) None (Typ
            Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))
         ) ()))
      ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ()))
    ) (Typ Bool))
   (@@ "vstd/simple_pptr.rs:341:13: 341:30 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.is_uninit.")
      ((Typ TypParam "V")) () (AutospecUsage Final)
     ) ((@@ "vstd/simple_pptr.rs:341:13: 341:17 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Tuple 2) :variant "tuple%2"
          :field "1" :get_variant false :check (VariantCheck None))
        ) (@@ "vstd/simple_pptr.rs:341:13: 341:15 (#0)" (> Var (VarIdent "pt" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt Tuple
           2
          ) ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ()) (Typ Decorate (TypDecoration Tracked) None (Typ
             Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))
          ) ()))
       ) (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec (MaskSpec InvariantOpens
   ()
  ) :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false
   :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None
   :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover
   false :memoize false :rlimit None :print_zero_args true :print_as_method false :prophecy_dependent false :size_of_broadcast_proof
   false :is_type_invariant_fn false
  ) :body None :extra_dependencies ()))

(@ "vstd/simple_pptr.rs:526:5: 526:88 (#0)" (Function
  :name (Fun :path "vstd!simple_pptr.impl&%4.write.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   None
  ) :owning_module "vstd!simple_pptr." :mode Exec :fuel 1 :typ_params (
   "V"
  ) :typ_bounds () :params (
   (@ "vstd/simple_pptr.rs:526:18: 526:22 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ (Typ Datatype
      (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ()
     ) :mode Exec :is_mut false :unwrapped_info None))
   (@ "vstd/simple_pptr.rs:526:24: 526:37 (#1786)" (Param :name (VarIdent "perm" (VarIdentDisambiguate VirParam)) :typ (Typ Decorate
      (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ())
     ) :mode Exec :is_mut true :unwrapped_info (tuple Proof (VarIdent "verus_tmp_perm" (VarIdentDisambiguate RustcId 4)))))
   (@ "vstd/simple_pptr.rs:526:66: 526:73 (#0)" (Param :name (VarIdent "in_v" (VarIdentDisambiguate VirParam)) :typ (Typ TypParam
      "V"
     ) :mode Exec :is_mut false :unwrapped_info None))
  ) :ret (@ "vstd/simple_pptr.rs:526:74: 526:74 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam)) :typ
    (Typ Datatype (Dt Tuple 0) () ()) :mode Exec :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require (
   (@@ "vstd/simple_pptr.rs:528:13: 528:37 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/simple_pptr.rs:528:13: 528:29 (#0)" (> Call
       (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.pptr.") ((Typ TypParam "V")) () (AutospecUsage
         Final)
       ) ((@@ "vstd/simple_pptr.rs:528:13: 528:22 (#0)" (> VarAt (VarIdent "perm" (VarIdentDisambiguate VirParam)) (VarAt Pre)) (Typ
          Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))))
      ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ())
     ) (@@ "vstd/simple_pptr.rs:528:33: 528:37 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype (Dt
        Path "vstd!simple_pptr.PPtr."
       ) ((Typ TypParam "V")) ()))
    ) (Typ Bool))
  ) :ensure (
   (@@ "vstd/simple_pptr.rs:530:13: 530:45 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/simple_pptr.rs:530:13: 530:24 (#0)" (> Call
       (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.pptr.") ((Typ TypParam "V")) () (AutospecUsage
         Final)
       ) ((@@ "vstd/simple_pptr.rs:530:13: 530:17 (#0)" (> Var (VarIdent "perm" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
           Ref
          ) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))))
      ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ())
     ) (@@ "vstd/simple_pptr.rs:530:29: 530:45 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.pptr.")
        ((Typ TypParam "V")) () (AutospecUsage Final)
       ) ((@@ "vstd/simple_pptr.rs:530:29: 530:38 (#0)" (> VarAt (VarIdent "perm" (VarIdentDisambiguate VirParam)) (VarAt Pre)) (Typ
          Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))))
      ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ TypParam "V")) ()))
    ) (Typ Bool))
   (@@ "vstd/simple_pptr.rs:531:13: 531:60 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "vstd/simple_pptr.rs:531:13: 531:32 (#0)" (> Call
       (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.mem_contents.") ((Typ TypParam "V")) () (AutospecUsage
         Final)
       ) ((@@ "vstd/simple_pptr.rs:531:13: 531:17 (#0)" (> Var (VarIdent "perm" (VarIdentDisambiguate VirParam))) (Typ Decorate (TypDecoration
           Ref
          ) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ TypParam "V")) ()))))
      ) (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ TypParam "V")) ())
     ) (@@ "vstd/simple_pptr.rs:531:37: 531:60 (#0)" (> Ctor (Dt Path "vstd!raw_ptr.MemContents.") "Init" ((-> 0 (@@ "vstd/simple_pptr.rs:531:55: 531:59 (#0)"
          (> Var (VarIdent "in_v" (VarIdentDisambiguate VirParam))) (Typ TypParam "V")))
       ) None
      ) (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ TypParam "V")) ()))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec (MaskSpec InvariantOpens
   ()
  ) :unwind_spec (UnwindSpec NoUnwind) :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body None :extra_dependencies ()))

(@ "./singly_linked_list_trivial.rs:22:9: 22:53 (#0)" (Function
  :name (Fun :path "singly_linked_list_trivial!impl&%3.view.") :proxy None :kind (FunctionKind Static) :visibility (Visibility
   :restricted_to None
  ) :owning_module "singly_linked_list_trivial!." :mode Spec :fuel 1 :typ_params () :typ_bounds () :params (
   (@ "./singly_linked_list_trivial.rs:22:33: 22:38 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ
     (Typ Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "singly_linked_list_trivial!LList.") () ())) :mode Spec :is_mut
     false :unwrapped_info None))
  ) :ret (@ "./singly_linked_list_trivial.rs:22:43: 22:53 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam))
    :typ (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ Int (IntRange USize))) ()) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body (@@ "./singly_linked_list_trivial.rs:22:54: 27:10 (#0)" (> Block () (@@ "./singly_linked_list_trivial.rs:23:13: 26:14 (#0)"
     (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.new.") ((Typ Int (IntRange USize)) (Typ SpecFn ((Typ Int
           (IntRange Int))
         ) (Typ Int (IntRange USize)))
       ) ((ImplPath TraitImplPath "builtin!impl&%57.")) (AutospecUsage Final)
      ) ((@@ "./singly_linked_list_trivial.rs:24:17: 24:33 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.len.")
          ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ()))
          () (AutospecUsage Final)
         ) ((@@ "./singly_linked_list_trivial.rs:24:17: 24:26 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Path "singly_linked_list_trivial!LList.")
              :variant "LList" :field "ptrs" :get_variant false :check (VariantCheck None))
            ) (@@ "./singly_linked_list_trivial.rs:24:17: 24:21 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype
              (Dt Path "singly_linked_list_trivial!LList.") () ()))
           ) (Typ Decorate (TypDecoration Ghost) None (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.")
               ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
             ) ()))))
        ) (Typ Int (IntRange Nat))
       ) (@@ "./singly_linked_list_trivial.rs:25:17: 25:61 (#0)" (> Closure ((-> i~24 (Typ Int (IntRange Int)))) (@@ "./singly_linked_list_trivial.rs:25:26: 25:61 (#0)"
          (> Block () (@@ "./singly_linked_list_trivial.rs:25:28: 25:59 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Path "singly_linked_list_trivial!Node.")
               :variant "Node" :field "x" :get_variant false :check (VariantCheck None))
             ) (@@ "./singly_linked_list_trivial.rs:25:28: 25:57 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.value.")
                ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) () (AutospecUsage Final)
               ) ((@@ "./singly_linked_list_trivial.rs:25:28: 25:49 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.spec_index.")
                   ((Typ Int (IntRange Nat)) (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                       () ())
                     ) ())
                   ) () (AutospecUsage Final)
                  ) ((@@ "./singly_linked_list_trivial.rs:25:28: 25:38 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Path "singly_linked_list_trivial!LList.")
                       :variant "LList" :field "perms" :get_variant false :check (VariantCheck None))
                     ) (@@ "./singly_linked_list_trivial.rs:25:28: 25:32 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype
                       (Dt Path "singly_linked_list_trivial!LList.") () ()))
                    ) (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!map.Map.") ((Typ Int (IntRange Nat)) (Typ Datatype
                        (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
                      ) ()))
                   ) (@@ "./singly_linked_list_trivial.rs:25:40: 25:41 (#0)" (> Unary (UnaryOp Clip :range (IntRange Nat) :truncate true) (@@ "./singly_linked_list_trivial.rs:25:40: 25:41 (#0)"
                      (> Var (VarIdent "i" (VarIdentDisambiguate RustcId 24))) (Typ Int (IntRange Int)))
                    ) (Typ Int (IntRange Nat))))
                 ) (Typ Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                     () ())
                   ) ()))))
              ) (Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ()))
            ) (Typ Int (IntRange USize)))
          ) (Typ Int (IntRange USize)))
        ) (Typ SpecFn ((Typ Int (IntRange Int))) (Typ Int (IntRange USize)))))
     ) (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ Int (IntRange USize))) ()))
   ) (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ Int (IntRange USize))) ())
  ) :extra_dependencies ()))

(@ "./singly_linked_list_trivial.rs:29:14: 29:61 (#0)" (Function
  :name (Fun :path "singly_linked_list_trivial!impl&%3.next_of.") :proxy None :kind (FunctionKind Static) :visibility (Visibility
   :restricted_to "singly_linked_list_trivial!."
  ) :owning_module "singly_linked_list_trivial!." :mode Spec :fuel 1 :typ_params () :typ_bounds () :params (
   (@ "./singly_linked_list_trivial.rs:29:25: 29:30 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ
     (Typ Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "singly_linked_list_trivial!LList.") () ())) :mode Spec :is_mut
     false :unwrapped_info None))
   (@ "./singly_linked_list_trivial.rs:29:32: 29:38 (#0)" (Param :name (VarIdent "i" (VarIdentDisambiguate VirParam)) :typ (Typ
      Int (IntRange Nat)
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "./singly_linked_list_trivial.rs:29:43: 29:61 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam))
    :typ (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
         () ())
       ) ())
     ) ()
    ) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body (@@ "./singly_linked_list_trivial.rs:29:62: 35:10 (#0)" (> Block () (@@ "./singly_linked_list_trivial.rs:30:13: 34:14 (#0)"
     (> If (@@ "./singly_linked_list_trivial.rs:30:16: 30:41 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "./singly_linked_list_trivial.rs:30:16: 30:21 (#0)"
         (> Unary (UnaryOp Clip :range (IntRange Nat) :truncate true) (@@ "./singly_linked_list_trivial.rs:30:16: 30:21 (#0)" (> Binary
            (BinaryOp Arith (ArithOp Add) Spec) (@@ "./singly_linked_list_trivial.rs:30:16: 30:17 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate
                VirParam))
             ) (Typ Int (IntRange Nat))
            ) (@@ "./singly_linked_list_trivial.rs:30:20: 30:21 (#0)" (> Const (Constant Int 1)) (Typ Int (IntRange Nat)))
           ) (Typ Int (IntRange Nat)))
         ) (Typ Int (IntRange Nat))
        ) (@@ "./singly_linked_list_trivial.rs:30:25: 30:41 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.len.")
           ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ()))
           () (AutospecUsage Final)
          ) ((@@ "./singly_linked_list_trivial.rs:30:25: 30:34 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Path "singly_linked_list_trivial!LList.")
               :variant "LList" :field "ptrs" :get_variant false :check (VariantCheck None))
             ) (@@ "./singly_linked_list_trivial.rs:30:25: 30:29 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype
               (Dt Path "singly_linked_list_trivial!LList.") () ()))
            ) (Typ Decorate (TypDecoration Ghost) None (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.")
                ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
              ) ()))))
         ) (Typ Int (IntRange Nat)))
       ) (Typ Bool)
      ) (@@ "./singly_linked_list_trivial.rs:30:42: 32:14 (#0)" (> Block () (@@ "./singly_linked_list_trivial.rs:31:17: 31:21 (#0)"
         (> Ctor (Dt Path "core!option.Option.") "None" () None) (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path
             "vstd!simple_pptr.PPtr."
            ) ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
          ) ()))
       ) (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
            () ())
          ) ())
        ) ())
      ) (@@ "./singly_linked_list_trivial.rs:32:20: 34:14 (#0)" (> Block () (@@ "./singly_linked_list_trivial.rs:33:17: 33:47 (#0)"
         (> Ctor (Dt Path "core!option.Option.") "Some" ((-> 0 (@@ "./singly_linked_list_trivial.rs:33:22: 33:46 (#0)" (> Call (CallTarget
               Fun (CallTargetKind Static) (Fun :path "vstd!seq.impl&%0.spec_index.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ
                   Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())
                 ) ())
               ) () (AutospecUsage Final)
              ) ((@@ "./singly_linked_list_trivial.rs:33:22: 33:31 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Path "singly_linked_list_trivial!LList.")
                   :variant "LList" :field "ptrs" :get_variant false :check (VariantCheck None))
                 ) (@@ "./singly_linked_list_trivial.rs:33:22: 33:26 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype
                   (Dt Path "singly_linked_list_trivial!LList.") () ()))
                ) (Typ Decorate (TypDecoration Ghost) None (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.")
                    ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
                  ) ()))
               ) (@@ "./singly_linked_list_trivial.rs:33:33: 33:45 (#0)" (> Binary (BinaryOp Arith (ArithOp Add) Spec) (@@ "./singly_linked_list_trivial.rs:33:33: 33:34 (#0)"
                  (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (IntRange Nat))
                 ) (@@ "./singly_linked_list_trivial.rs:33:44: 33:45 (#0)" (> Const (Constant Int 1)) (Typ Int (IntRange Nat)))
                ) (Typ Int (IntRange Int))))
             ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())))
          ) None
         ) (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
              () ())
            ) ())
          ) ()))
       ) (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
            () ())
          ) ())
        ) ()))
     ) (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
          () ())
        ) ())
      ) ()))
   ) (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
        () ())
      ) ())
    ) ())
  ) :extra_dependencies ()))

(@ "./singly_linked_list_trivial.rs:37:14: 37:47 (#0)" (Function
  :name (Fun :path "singly_linked_list_trivial!impl&%3.wf_node.") :proxy None :kind (FunctionKind Static) :visibility (Visibility
   :restricted_to "singly_linked_list_trivial!."
  ) :owning_module "singly_linked_list_trivial!." :mode Spec :fuel 1 :typ_params () :typ_bounds () :params (
   (@ "./singly_linked_list_trivial.rs:37:25: 37:30 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ
     (Typ Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "singly_linked_list_trivial!LList.") () ())) :mode Spec :is_mut
     false :unwrapped_info None))
   (@ "./singly_linked_list_trivial.rs:37:32: 37:38 (#0)" (Param :name (VarIdent "i" (VarIdentDisambiguate VirParam)) :typ (Typ
      Int (IntRange Nat)
     ) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "./singly_linked_list_trivial.rs:37:43: 37:47 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam))
    :typ (Typ Bool) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body (@@ "./singly_linked_list_trivial.rs:37:48: 42:10 (#0)" (> Block () (@@ "./singly_linked_list_trivial.rs:38:17: 41:50 (#0)"
     (> Binary (BinaryOp And) (@@ "./singly_linked_list_trivial.rs:38:17: 39:62 (#0)" (> Binary (BinaryOp And) (@@ "./singly_linked_list_trivial.rs:38:17: 38:46 (#0)"
         (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!set.impl&%0.contains.") ((Typ Int (IntRange Nat))) () (AutospecUsage
            Final)
          ) ((@@ "./singly_linked_list_trivial.rs:38:17: 38:34 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.dom.")
              ((Typ Int (IntRange Nat)) (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                  () ())
                ) ())
              ) () (AutospecUsage Final)
             ) ((@@ "./singly_linked_list_trivial.rs:38:17: 38:27 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Path "singly_linked_list_trivial!LList.")
                  :variant "LList" :field "perms" :get_variant false :check (VariantCheck None))
                ) (@@ "./singly_linked_list_trivial.rs:38:17: 38:21 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype
                  (Dt Path "singly_linked_list_trivial!LList.") () ()))
               ) (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!map.Map.") ((Typ Int (IntRange Nat)) (Typ Datatype
                   (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
                 ) ()))))
            ) (Typ Datatype (Dt Path "vstd!set.Set.") ((Typ Int (IntRange Nat))) ())
           ) (@@ "./singly_linked_list_trivial.rs:38:44: 38:45 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (
              IntRange Nat))))
         ) (Typ Bool)
        ) (@@ "./singly_linked_list_trivial.rs:39:17: 39:62 (#0)" (> Binary (BinaryOp Eq Spec) (@@ "./singly_linked_list_trivial.rs:39:17: 39:38 (#0)"
           (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%1.pptr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
               () ())
             ) () (AutospecUsage Final)
            ) ((@@ "./singly_linked_list_trivial.rs:39:17: 39:31 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.spec_index.")
                ((Typ Int (IntRange Nat)) (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                    () ())
                  ) ())
                ) () (AutospecUsage Final)
               ) ((@@ "./singly_linked_list_trivial.rs:39:17: 39:27 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Path "singly_linked_list_trivial!LList.")
                    :variant "LList" :field "perms" :get_variant false :check (VariantCheck None))
                  ) (@@ "./singly_linked_list_trivial.rs:39:17: 39:21 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype
                    (Dt Path "singly_linked_list_trivial!LList.") () ()))
                 ) (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!map.Map.") ((Typ Int (IntRange Nat)) (Typ Datatype
                     (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
                   ) ()))
                ) (@@ "./singly_linked_list_trivial.rs:39:29: 39:30 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (
                   IntRange Nat))))
              ) (Typ Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                  () ())
                ) ()))))
           ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
          ) (@@ "./singly_linked_list_trivial.rs:39:42: 39:62 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.impl&%0.spec_index.")
             ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ()))
             () (AutospecUsage Final)
            ) ((@@ "./singly_linked_list_trivial.rs:39:42: 39:51 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Path "singly_linked_list_trivial!LList.")
                 :variant "LList" :field "ptrs" :get_variant false :check (VariantCheck None))
               ) (@@ "./singly_linked_list_trivial.rs:39:42: 39:46 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype
                 (Dt Path "singly_linked_list_trivial!LList.") () ()))
              ) (Typ Decorate (TypDecoration Ghost) None (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.")
                  ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
                ) ()))
             ) (@@ "./singly_linked_list_trivial.rs:39:53: 39:54 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (
                IntRange Nat))))
           ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ()))
         ) (Typ Bool))
       ) (Typ Bool)
      ) (@@ "./singly_linked_list_trivial.rs:40:17: 41:50 (#0)" (> Block (
         (@ "./singly_linked_list_trivial.rs:40:17: 41:50 (#0)" (Stmt Decl :pattern (@@ "./singly_linked_list_trivial.rs:40:17: 41:50 (#0)"
            (Pattern Var :name (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 1)) :mutable false) (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.")
             ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
           ) :mode Exec :init (@@ "./singly_linked_list_trivial.rs:40:17: 41:50 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (
               Fun :path "vstd!simple_pptr.impl&%1.mem_contents."
              ) ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) () (AutospecUsage Final)
             ) ((@@ "./singly_linked_list_trivial.rs:40:17: 40:31 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!map.impl&%0.spec_index.")
                 ((Typ Int (IntRange Nat)) (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                     () ())
                   ) ())
                 ) () (AutospecUsage Final)
                ) ((@@ "./singly_linked_list_trivial.rs:40:17: 40:27 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Path "singly_linked_list_trivial!LList.")
                     :variant "LList" :field "perms" :get_variant false :check (VariantCheck None))
                   ) (@@ "./singly_linked_list_trivial.rs:40:17: 40:21 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype
                     (Dt Path "singly_linked_list_trivial!LList.") () ()))
                  ) (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!map.Map.") ((Typ Int (IntRange Nat)) (Typ Datatype
                      (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
                    ) ()))
                 ) (@@ "./singly_linked_list_trivial.rs:40:29: 40:30 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (
                    IntRange Nat))))
               ) (Typ Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                   () ())
                 ) ()))))
            ) (Typ Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ()))
             ()))))
        ) (@@ "./singly_linked_list_trivial.rs:40:55: 40:78 (#0)" (> If (@@ "./singly_linked_list_trivial.rs:40:55: 40:78 (#0)" (> Binary
            (BinaryOp And) (@@ "./singly_linked_list_trivial.rs:40:55: 40:78 (#0)" (> UnaryOpr (UnaryOpr IsVariant :datatype (Dt Path "vstd!raw_ptr.MemContents.")
               :variant "Init"
              ) (@@ "./singly_linked_list_trivial.rs:40:17: 41:50 (#0)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 1))) (Typ
                Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ()))
             ) (Typ Bool)
            ) (@@ "./singly_linked_list_trivial.rs:40:55: 40:78 (#0)" (> Const (Constant Bool true)) (Typ Bool))
           ) (Typ Bool)
          ) (@@ "./singly_linked_list_trivial.rs:40:55: 40:78 (#0)" (> Block (
             (@ "./singly_linked_list_trivial.rs:40:55: 40:78 (#0)" (Stmt Decl :pattern (@@ "./singly_linked_list_trivial.rs:40:55: 40:78 (#0)"
                (Pattern Var :name (VarIdent "node" (VarIdentDisambiguate RustcId 55)) :mutable false) (Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                 () ())
               ) :mode Exec :init (@@ "./singly_linked_list_trivial.rs:40:55: 40:78 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt
                    Path "vstd!raw_ptr.MemContents."
                   ) :variant "Init" :field "0" :get_variant false :check (VariantCheck None))
                 ) (@@ "./singly_linked_list_trivial.rs:40:17: 41:50 (#0)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 1))) (Typ
                   Datatype (Dt Path "vstd!raw_ptr.MemContents.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ()))
                ) (Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ()))))
            ) (@@ "./singly_linked_list_trivial.rs:40:17: 41:50 (#0)" (> Block () (@@ "./singly_linked_list_trivial.rs:41:22: 41:50 (#0)"
               (> Binary (BinaryOp Eq Spec) (@@ "./singly_linked_list_trivial.rs:41:22: 41:31 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype
                    (Dt Path "singly_linked_list_trivial!Node.") :variant "Node" :field "next" :get_variant false :check (VariantCheck None))
                  ) (@@ "./singly_linked_list_trivial.rs:41:22: 41:26 (#0)" (> Var (VarIdent "node" (VarIdentDisambiguate RustcId 55))) (Typ
                    Datatype (Dt Path "singly_linked_list_trivial!Node.") () ()))
                 ) (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                      () ())
                    ) ())
                  ) ())
                ) (@@ "./singly_linked_list_trivial.rs:41:35: 41:50 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "singly_linked_list_trivial!impl&%3.next_of.")
                   () () (AutospecUsage Final)
                  ) ((@@ "./singly_linked_list_trivial.rs:41:35: 41:39 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Decorate
                     (TypDecoration Ref) None (Typ Datatype (Dt Path "singly_linked_list_trivial!LList.") () ()))
                   ) (@@ "./singly_linked_list_trivial.rs:41:48: 41:49 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate VirParam))) (Typ Int (
                      IntRange Nat))))
                 ) (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                      () ())
                    ) ())
                  ) ()))
               ) (Typ Bool))
             ) (Typ Bool))
           ) (Typ Bool)
          ) (@@ "./singly_linked_list_trivial.rs:40:17: 41:50 (#0)" (> Block () (@@ "./singly_linked_list_trivial.rs:40:17: 41:50 (#0)"
             (> Block () (@@ "./singly_linked_list_trivial.rs:40:17: 41:50 (#0)" (> Const (Constant Bool false)) (Typ Bool))) (Typ Bool))
           ) (Typ Bool))
         ) (Typ Bool))
       ) (Typ Bool))
     ) (Typ Bool))
   ) (Typ Bool)
  ) :extra_dependencies ()))

(@ "./singly_linked_list_trivial.rs:44:14: 44:34 (#0)" (Function
  :name (Fun :path "singly_linked_list_trivial!impl&%3.wf.") :proxy None :kind (FunctionKind Static) :visibility (Visibility
   :restricted_to "singly_linked_list_trivial!."
  ) :owning_module "singly_linked_list_trivial!." :mode Spec :fuel 1 :typ_params () :typ_bounds () :params (
   (@ "./singly_linked_list_trivial.rs:44:20: 44:25 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ
     (Typ Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "singly_linked_list_trivial!LList.") () ())) :mode Spec :is_mut
     false :unwrapped_info None))
  ) :ret (@ "./singly_linked_list_trivial.rs:44:30: 44:34 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam))
    :typ (Typ Bool) :mode Spec :is_mut false :unwrapped_info None)
  ) :ens_has_return true :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args false :print_as_method true :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body (@@ "./singly_linked_list_trivial.rs:44:35: 46:10 (#0)" (> Block () (@@ "./singly_linked_list_trivial.rs:45:13: 45:74 (#0)"
     (> Quant (Forall) ((-> i~10 (Typ Int (IntRange Nat)))) (@@ "./singly_linked_list_trivial.rs:45:28: 45:74 (#0)" (> Binary (BinaryOp
         Implies
        ) (@@ "./singly_linked_list_trivial.rs:45:33: 45:34 (#0)" (> Binary (BinaryOp And) (@@ "./singly_linked_list_trivial.rs:45:28: 45:29 (#0)"
           (> Binary (BinaryOp Inequality (InequalityOp Le)) (@@ "./singly_linked_list_trivial.rs:45:28: 45:29 (#0)" (> Const (Constant
               Int 0)
             ) (Typ Int (IntRange Nat))
            ) (@@ "./singly_linked_list_trivial.rs:45:33: 45:34 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate RustcId 10))) (Typ Int
              (IntRange Nat)))
           ) (Typ Bool)
          ) (@@ "./singly_linked_list_trivial.rs:45:33: 45:34 (#0)" (> Binary (BinaryOp Inequality (InequalityOp Le)) (@@ "./singly_linked_list_trivial.rs:45:33: 45:34 (#0)"
             (> Var (VarIdent "i" (VarIdentDisambiguate RustcId 10))) (Typ Int (IntRange Nat))
            ) (@@ "./singly_linked_list_trivial.rs:45:38: 45:54 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!seq.Seq.len.")
               ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ()))
               () (AutospecUsage Final)
              ) ((@@ "./singly_linked_list_trivial.rs:45:38: 45:47 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt Path "singly_linked_list_trivial!LList.")
                   :variant "LList" :field "ptrs" :get_variant false :check (VariantCheck None))
                 ) (@@ "./singly_linked_list_trivial.rs:45:38: 45:42 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype
                   (Dt Path "singly_linked_list_trivial!LList.") () ()))
                ) (Typ Decorate (TypDecoration Ghost) None (Typ Datatype (Dt Path "vstd!seq.Seq.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.")
                    ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
                  ) ()))))
             ) (Typ Int (IntRange Nat)))
           ) (Typ Bool))
         ) (Typ Bool)
        ) (@@ "./singly_linked_list_trivial.rs:45:59: 45:74 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "singly_linked_list_trivial!impl&%3.wf_node.")
           () () (AutospecUsage Final)
          ) ((@@ "./singly_linked_list_trivial.rs:45:59: 45:63 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Decorate
             (TypDecoration Ref) None (Typ Datatype (Dt Path "singly_linked_list_trivial!LList.") () ()))
           ) (@@ "./singly_linked_list_trivial.rs:45:72: 45:73 (#0)" (> Var (VarIdent "i" (VarIdentDisambiguate RustcId 10))) (Typ Int
             (IntRange Nat))))
         ) (Typ Bool))
       ) (Typ Bool))
     ) (Typ Bool))
   ) (Typ Bool)
  ) :extra_dependencies ()))

(@ "./singly_linked_list_trivial.rs:48:9: 48:43 (#0)" (Function
  :name (Fun :path "singly_linked_list_trivial!impl&%3.push_front.") :proxy None :kind (FunctionKind Static) :visibility (Visibility
   :restricted_to "singly_linked_list_trivial!."
  ) :owning_module "singly_linked_list_trivial!." :mode Exec :fuel 1 :typ_params () :typ_bounds () :params (
   (@ "./singly_linked_list_trivial.rs:48:23: 48:32 (#0)" (Param :name (VarIdent "self" (VarIdentDisambiguate VirParam)) :typ
     (Typ Datatype (Dt Path "singly_linked_list_trivial!LList.") () ()) :mode Exec :is_mut true :unwrapped_info None))
   (@ "./singly_linked_list_trivial.rs:48:34: 48:42 (#0)" (Param :name (VarIdent "v" (VarIdentDisambiguate VirParam)) :typ (Typ
      Int (IntRange USize)
     ) :mode Exec :is_mut false :unwrapped_info None))
  ) :ret (@ "./singly_linked_list_trivial.rs:48:43: 48:43 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam))
    :typ (Typ Datatype (Dt Tuple 0) () ()) :mode Exec :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require (
   (@@ "./singly_linked_list_trivial.rs:49:22: 49:36 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "singly_linked_list_trivial!impl&%3.wf.")
      () () (AutospecUsage Final)
     ) ((@@ "./singly_linked_list_trivial.rs:49:22: 49:31 (#0)" (> VarAt (VarIdent "self" (VarIdentDisambiguate VirParam)) (VarAt
         Pre)
       ) (Typ Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "singly_linked_list_trivial!LList.") () ()))))
    ) (Typ Bool))
  ) :ensure (
   (@@ "./singly_linked_list_trivial.rs:51:17: 51:26 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (Fun :path "singly_linked_list_trivial!impl&%3.wf.")
      () () (AutospecUsage Final)
     ) ((@@ "./singly_linked_list_trivial.rs:51:17: 51:21 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Decorate
        (TypDecoration Ref) None (Typ Datatype (Dt Path "singly_linked_list_trivial!LList.") () ()))))
    ) (Typ Bool))
  ) :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms None :mask_spec None :unwind_spec None :item_kind
  (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks true :inline false :hidden () :broadcast_forall
   false :broadcast_forall_only false :no_auto_trigger false :custom_req_err None :autospec None :bit_vector false :atomic false
   :integer_ring false :is_decrease_by false :check_recommends false :nonlinear false :spinoff_prover false :memoize false :rlimit
   None :print_zero_args false :print_as_method true :prophecy_dependent false :size_of_broadcast_proof false :is_type_invariant_fn
   false
  ) :body (@@ "./singly_linked_list_trivial.rs:53:9: 62:10 (#0)" (> Block (
     (@ "./singly_linked_list_trivial.rs:54:45: 54:66 (#0)" (Stmt Decl :pattern (@@ "./singly_linked_list_trivial.rs:54:45: 54:66 (#0)"
        (Pattern Var :name (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 1)) :mutable false) (Typ Datatype (Dt Tuple 2) ((Typ Datatype
           (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ()
          ) (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
              () ())
            ) ()))
         ) ())
       ) :mode Exec :init (@@ "./singly_linked_list_trivial.rs:54:45: 54:66 (#0)" (> Call (CallTarget Fun (CallTargetKind Static) (
           Fun :path "vstd!simple_pptr.impl&%4.empty."
          ) ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) () (AutospecUsage Final)
         ) ()
        ) (Typ Datatype (Dt Tuple 2) ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
             () ())
           ) ()
          ) (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
              () ())
            ) ()))
         ) ()))))
     (@ "./singly_linked_list_trivial.rs:54:17: 54:42 (#0)" (Stmt Decl :pattern (@@ "./singly_linked_list_trivial.rs:54:17: 54:42 (#0)"
        (Pattern Var :name (VarIdent "node" (VarIdentDisambiguate RustcId 39)) :mutable false) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.")
         ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
       ) :mode Exec :init (@@ "./singly_linked_list_trivial.rs:54:17: 54:42 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt
            Tuple 2
           ) :variant "tuple%2" :field "0" :get_variant false :check (VariantCheck None))
         ) (@@ "./singly_linked_list_trivial.rs:54:45: 54:66 (#0)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 1))) (Typ
           Datatype (Dt Tuple 2) ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
               () ())
             ) ()
            ) (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                () ())
              ) ()))
           ) ()))
        ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ()))))
     (@ "./singly_linked_list_trivial.rs:54:17: 54:42 (#0)" (Stmt Decl :pattern (@@ "./singly_linked_list_trivial.rs:54:17: 54:42 (#0)"
        (Pattern Var :name (VarIdent "verus_tmp_perm" (VarIdentDisambiguate RustcId 40)) :mutable false) (Typ Decorate (TypDecoration
          Tracked
         ) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ()))
          ()))
       ) :mode Exec :init (@@ "./singly_linked_list_trivial.rs:54:17: 54:42 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt
            Tuple 2
           ) :variant "tuple%2" :field "1" :get_variant false :check (VariantCheck None))
         ) (@@ "./singly_linked_list_trivial.rs:54:45: 54:66 (#0)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 1))) (Typ
           Datatype (Dt Tuple 2) ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
               () ())
             ) ()
            ) (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                () ())
              ) ()))
           ) ()))
        ) (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
            () ())
          ) ())))))
     (@ "./singly_linked_list_trivial.rs:54:32: 54:40 (#0)" (Stmt Decl :pattern (@@ "./singly_linked_list_trivial.rs:54:32: 54:40 (#0)"
        (Pattern Var :name (VarIdent "perm" (VarIdentDisambiguate RustcId 44)) :mutable true) (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.")
         ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
       ) :mode Proof :init None))
     (@ "./singly_linked_list_trivial.rs:54:13: 54:67 (#0)" (Stmt Expr (@@ "./singly_linked_list_trivial.rs:54:13: 54:67 (#0)" (>
         Block (
          (@ "./singly_linked_list_trivial.rs:54:24: 54:41 (#8)" (Stmt Expr (@@ "./singly_linked_list_trivial.rs:54:24: 54:41 (#8)" (>
              Assign :init_not_mut false :lhs (@@ "./singly_linked_list_trivial.rs:54:36: 54:40 (#0)" (> VarLoc (VarIdent "perm" (VarIdentDisambiguate
                  RustcId 44))
               ) (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ()))
                ())
              ) :rhs (@@ "./singly_linked_list_trivial.rs:54:24: 54:41 (#8)" (> Var (VarIdent "verus_tmp_perm" (VarIdentDisambiguate RustcId
                  40))
               ) (Typ Decorate (TypDecoration Tracked) None (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                   () ())
                 ) ()))
              ) :op None
             ) (Typ Datatype (Dt Tuple 0) () ()))))
         ) None
        ) (Typ Datatype (Dt Tuple 0) () ()))))
    ) (@@ "./singly_linked_list_trivial.rs:55:13: 61:14 (#0)" (> Block (
       (@ "./singly_linked_list_trivial.rs:55:38: 55:48 (#0)" (Stmt Decl :pattern (@@ "./singly_linked_list_trivial.rs:55:38: 55:48 (#0)"
          (Pattern Var :name (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 2)) :mutable false) (Typ Datatype (Dt Path "core!option.Option.")
           ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ()))
           ())
         ) :mode Exec :init (@@ "./singly_linked_list_trivial.rs:55:38: 55:48 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt
              Path "singly_linked_list_trivial!LList."
             ) :variant "LList" :field "first" :get_variant false :check (VariantCheck None))
           ) (@@ "./singly_linked_list_trivial.rs:55:38: 55:42 (#0)" (> Var (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ Datatype
             (Dt Path "singly_linked_list_trivial!LList.") () ()))
          ) (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
               () ())
             ) ())
           ) ()))))
      ) (@@ "./singly_linked_list_trivial.rs:55:20: 55:35 (#0)" (> If (@@ "./singly_linked_list_trivial.rs:55:20: 55:35 (#0)" (> Binary
          (BinaryOp And) (@@ "./singly_linked_list_trivial.rs:55:20: 55:35 (#0)" (> UnaryOpr (UnaryOpr IsVariant :datatype (Dt Path "core!option.Option.")
             :variant "Some"
            ) (@@ "./singly_linked_list_trivial.rs:55:38: 55:48 (#0)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 2))) (Typ
              Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                  () ())
                ) ())
              ) ()))
           ) (Typ Bool)
          ) (@@ "./singly_linked_list_trivial.rs:55:20: 55:35 (#0)" (> Const (Constant Bool true)) (Typ Bool))
         ) (Typ Bool)
        ) (@@ "./singly_linked_list_trivial.rs:55:20: 55:35 (#0)" (> Block (
           (@ "./singly_linked_list_trivial.rs:55:20: 55:35 (#0)" (Stmt Decl :pattern (@@ "./singly_linked_list_trivial.rs:55:20: 55:35 (#0)"
              (Pattern Var :name (VarIdent "old_first" (VarIdentDisambiguate RustcId 59)) :mutable false) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.")
               ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
             ) :mode Exec :init (@@ "./singly_linked_list_trivial.rs:55:20: 55:35 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr :datatype (Dt
                  Path "core!option.Option."
                 ) :variant "Some" :field "0" :get_variant false :check (VariantCheck None))
               ) (@@ "./singly_linked_list_trivial.rs:55:38: 55:48 (#0)" (> Var (VarIdent "tmp%%" (VarIdentDisambiguate VirTemp 2))) (Typ
                 Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                     () ())
                   ) ())
                 ) ()))
              ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ()))))
          ) (@@ "./singly_linked_list_trivial.rs:55:49: 58:14 (#0)" (> Block (
             (@ "./singly_linked_list_trivial.rs:56:17: 57:66 (#0)" (Stmt Expr (@@ "./singly_linked_list_trivial.rs:56:17: 57:66 (#0)" (>
                 Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%4.write.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                    () ())
                  ) ((ImplPath TraitImplPath "singly_linked_list_trivial!impl&%1.")) (AutospecUsage Final)
                 ) ((@@ "./singly_linked_list_trivial.rs:56:17: 56:21 (#0)" (> Var (VarIdent "node" (VarIdentDisambiguate RustcId 39))) (Typ
                    Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
                  ) (@@ "./singly_linked_list_trivial.rs:56:36: 56:45 (#0)" (> Loc (@@ "./singly_linked_list_trivial.rs:56:41: 56:45 (#0)" (> VarLoc
                      (VarIdent "perm" (VarIdentDisambiguate RustcId 44))
                     ) (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ()))
                      ()))
                   ) (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ()))
                    ())
                  ) (@@ "./singly_linked_list_trivial.rs:57:21: 57:65 (#0)" (> Ctor (Dt Path "singly_linked_list_trivial!Node.") "Node" ((-> next
                      (@@ "./singly_linked_list_trivial.rs:57:34: 57:57 (#0)" (> Ctor (Dt Path "core!option.Option.") "Some" ((-> 0 (@@ "./singly_linked_list_trivial.rs:57:39: 57:56 (#0)"
                           (> Call (CallTarget Fun (CallTargetKind DynamicResolved :resolved (Fun :path "vstd!simple_pptr.impl&%2.clone.") :typs ((Typ Datatype
                                (Dt Path "singly_linked_list_trivial!Node.") () ())
                              ) :impl_paths () :is_trait_default false
                             ) (Fun :path "core!clone.Clone.clone.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                                 () ())
                               ) ())
                             ) ((ImplPath TraitImplPath "vstd!simple_pptr.impl&%2.")) (AutospecUsage Final)
                            ) ((@@ "./singly_linked_list_trivial.rs:57:39: 57:48 (#0)" (> Var (VarIdent "old_first" (VarIdentDisambiguate RustcId 59)))
                              (Typ Decorate (TypDecoration Ref) None (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                                  () ())
                                ) ()))))
                           ) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())))
                        ) None
                       ) (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                            () ())
                          ) ())
                        ) ()))
                     ) (-> x (@@ "./singly_linked_list_trivial.rs:57:63: 57:64 (#0)" (> Var (VarIdent "v" (VarIdentDisambiguate VirParam))) (Typ
                        Int (IntRange USize))))
                    ) None
                   ) (Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())))
                ) (Typ Datatype (Dt Tuple 0) () ()))))
            ) None
           ) (Typ Datatype (Dt Tuple 0) () ()))
         ) (Typ Datatype (Dt Tuple 0) () ())
        ) (@@ "./singly_linked_list_trivial.rs:55:16: 55:48 (#0)" (> Block () (@@ "./singly_linked_list_trivial.rs:58:20: 61:14 (#0)"
           (> Block (
             (@ "./singly_linked_list_trivial.rs:59:17: 59:74 (#0)" (Stmt Expr (@@ "./singly_linked_list_trivial.rs:59:17: 59:74 (#0)" (>
                 Call (CallTarget Fun (CallTargetKind Static) (Fun :path "vstd!simple_pptr.impl&%4.write.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                    () ())
                  ) ((ImplPath TraitImplPath "singly_linked_list_trivial!impl&%1.")) (AutospecUsage Final)
                 ) ((@@ "./singly_linked_list_trivial.rs:59:17: 59:21 (#0)" (> Var (VarIdent "node" (VarIdentDisambiguate RustcId 39))) (Typ
                    Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())) ())
                  ) (@@ "./singly_linked_list_trivial.rs:59:36: 59:45 (#0)" (> Loc (@@ "./singly_linked_list_trivial.rs:59:41: 59:45 (#0)" (> VarLoc
                      (VarIdent "perm" (VarIdentDisambiguate RustcId 44))
                     ) (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ()))
                      ()))
                   ) (Typ Datatype (Dt Path "vstd!simple_pptr.PointsTo.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ()))
                    ())
                  ) (@@ "./singly_linked_list_trivial.rs:59:48: 59:73 (#0)" (> Ctor (Dt Path "singly_linked_list_trivial!Node.") "Node" ((-> next
                      (@@ "./singly_linked_list_trivial.rs:59:61: 59:65 (#0)" (> Ctor (Dt Path "core!option.Option.") "None" () None) (Typ Datatype
                        (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                            () ())
                          ) ())
                        ) ()))
                     ) (-> x (@@ "./singly_linked_list_trivial.rs:59:70: 59:71 (#0)" (> Var (VarIdent "v" (VarIdentDisambiguate VirParam))) (Typ
                        Int (IntRange USize))))
                    ) None
                   ) (Typ Datatype (Dt Path "singly_linked_list_trivial!Node.") () ())))
                ) (Typ Datatype (Dt Tuple 0) () ()))))
             (@ "./singly_linked_list_trivial.rs:60:17: 60:40 (#0)" (Stmt Expr (@@ "./singly_linked_list_trivial.rs:60:17: 60:40 (#0)" (>
                 Assign :init_not_mut false :lhs (@@ "./singly_linked_list_trivial.rs:60:17: 60:27 (#0)" (> UnaryOpr (UnaryOpr Field (FieldOpr
                     :datatype (Dt Path "singly_linked_list_trivial!LList.") :variant "LList" :field "first" :get_variant false :check (VariantCheck
                      None))
                   ) (@@ "./singly_linked_list_trivial.rs:60:17: 60:21 (#0)" (> VarLoc (VarIdent "self" (VarIdentDisambiguate VirParam))) (Typ
                     Datatype (Dt Path "singly_linked_list_trivial!LList.") () ()))
                  ) (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                       () ())
                     ) ())
                   ) ())
                 ) :rhs (@@ "./singly_linked_list_trivial.rs:60:30: 60:40 (#0)" (> Ctor (Dt Path "core!option.Option.") "Some" ((-> 0 (@@ "./singly_linked_list_trivial.rs:60:35: 60:39 (#0)"
                      (> Var (VarIdent "node" (VarIdentDisambiguate RustcId 39))) (Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype
                         (Dt Path "singly_linked_list_trivial!Node.") () ())
                       ) ())))
                   ) None
                  ) (Typ Datatype (Dt Path "core!option.Option.") ((Typ Datatype (Dt Path "vstd!simple_pptr.PPtr.") ((Typ Datatype (Dt Path "singly_linked_list_trivial!Node.")
                       () ())
                     ) ())
                   ) ())
                 ) :op None
                ) (Typ Datatype (Dt Tuple 0) () ()))))
            ) None
           ) (Typ Datatype (Dt Tuple 0) () ()))
         ) (Typ Datatype (Dt Tuple 0) () ()))
       ) (Typ Datatype (Dt Tuple 0) () ()))
     ) (Typ Datatype (Dt Tuple 0) () ()))
   ) (Typ Datatype (Dt Tuple 0) () ())
  ) :extra_dependencies ()))

(@ "./singly_linked_list_trivial.rs:65:5: 65:14 (#0)" (Function
  :name (Fun :path "singly_linked_list_trivial!main.") :proxy None :kind (FunctionKind Static) :visibility (Visibility :restricted_to
   "singly_linked_list_trivial!."
  ) :owning_module "singly_linked_list_trivial!." :mode Exec :fuel 1 :typ_params () :typ_bounds () :params (
   (@ "./singly_linked_list_trivial.rs:65:5: 65:14 (#0)" (Param :name (VarIdent "no%param" (VarIdentDisambiguate AirLocal)) :typ
     (Typ Int (IntRange Int)) :mode Spec :is_mut false :unwrapped_info None))
  ) :ret (@ "./singly_linked_list_trivial.rs:65:14: 65:14 (#0)" (Param :name (VarIdent "%return" (VarIdentDisambiguate VirParam))
    :typ (Typ Datatype (Dt Tuple 0) () ()) :mode Exec :is_mut false :unwrapped_info None)
  ) :ens_has_return false :require () :ensure () :returns None :decrease () :decrease_when None :decrease_by None :fndef_axioms
  None :mask_spec None :unwind_spec None :item_kind (ItemKind Function) :publish None :attrs (FunctionAttrs :uses_ghost_blocks
   true :inline false :hidden () :broadcast_forall false :broadcast_forall_only false :no_auto_trigger false :custom_req_err
   None :autospec None :bit_vector false :atomic false :integer_ring false :is_decrease_by false :check_recommends false :nonlinear
   false :spinoff_prover false :memoize false :rlimit None :print_zero_args true :print_as_method false :prophecy_dependent
   false :size_of_broadcast_proof false :is_type_invariant_fn false
  ) :body (@@ "./singly_linked_list_trivial.rs:65:15: 65:17 (#0)" (> Block () None) (Typ Datatype (Dt Tuple 0) () ())) :extra_dependencies
  ()))

(group_id "vstd!array.group_array_axioms.")

(group_id "vstd!map.group_map_axioms.")

(group_id "vstd!multiset.group_multiset_axioms.")

(group_id "vstd!raw_ptr.group_raw_ptr_axioms.")

(group_id "vstd!seq.group_seq_axioms.")

(group_id "vstd!seq_lib.group_seq_lib_default.")

(group_id "vstd!set.group_set_axioms.")

(group_id "vstd!set_lib.group_set_lib_axioms.")

(group_id "vstd!slice.group_slice_axioms.")

(group_id "vstd!string.group_string_axioms.")

(group_id "vstd!std_specs.bits.group_bits_axioms.")

(group_id "vstd!std_specs.control_flow.group_control_flow_axioms.")

(group_id "vstd!std_specs.range.group_range_axioms.")

(group_id "vstd!std_specs.vec.group_vec_axioms.")

(group_id "vstd!group_vstd_default.")

(trait "core!clone.Clone.")

(trait_impl "vstd!simple_pptr.impl&%2." "core!clone.Clone.")

(trait_impl "core!clone.impls.impl&%5." "core!clone.Clone.")

(trait_impl "core!marker.impl&%13." "core!clone.Clone.")

(trait_impl "core!clone.impls.impl&%3." "core!clone.Clone.")

(trait_impl "core!clone.impls.impl&%21." "core!clone.Clone.")

(trait_impl "core!option.impl&%5." "core!clone.Clone.")

(trait_impl "builtin!impl&%4." "core!clone.Clone.")

(trait_impl "builtin!impl&%2." "core!clone.Clone.")

(trait_impl "singly_linked_list_trivial!impl&%0." "core!clone.Clone.")

(module_id "vstd!arithmetic.internals.div_internals_nonlinear.")

(module_id "vstd!arithmetic.internals.general_internals.")

(module_id "vstd!arithmetic.internals.mod_internals_nonlinear.")

(module_id "vstd!arithmetic.internals.mul_internals_nonlinear.")

(module_id "vstd!arithmetic.internals.div_internals.")

(module_id "vstd!arithmetic.internals.mod_internals.")

(module_id "vstd!arithmetic.internals.mul_internals.")

(module_id "vstd!rwlock.RwLockToks.show.")

(module_id "vstd!rwlock.RwLockToks.take_step.")

(module_id "vstd!shared.Dupe.show.")

(module_id "vstd!shared.Dupe.take_step.")

(module_id "vstd!std_specs.atomic.atomic_specs_u8.")

(module_id "vstd!std_specs.atomic.atomic_specs_u16.")

(module_id "vstd!std_specs.atomic.atomic_specs_u32.")

(module_id "vstd!std_specs.atomic.atomic_specs_u64.")

(module_id "vstd!std_specs.atomic.atomic_specs_usize.")

(module_id "vstd!std_specs.atomic.atomic_specs_i8.")

(module_id "vstd!std_specs.atomic.atomic_specs_i16.")

(module_id "vstd!std_specs.atomic.atomic_specs_i32.")

(module_id "vstd!std_specs.atomic.atomic_specs_i64.")

(module_id "vstd!std_specs.atomic.atomic_specs_isize.")

(module_id "vstd!std_specs.atomic.atomic_specs_bool.")

(module_id "vstd!std_specs.num.u8_specs.")

(module_id "vstd!std_specs.num.i8_specs.")

(module_id "vstd!std_specs.num.u16_specs.")

(module_id "vstd!std_specs.num.i16_specs.")

(module_id "vstd!std_specs.num.u32_specs.")

(module_id "vstd!std_specs.num.i32_specs.")

(module_id "vstd!std_specs.num.u64_specs.")

(module_id "vstd!std_specs.num.i64_specs.")

(module_id "vstd!std_specs.num.u128_specs.")

(module_id "vstd!std_specs.num.i128_specs.")

(module_id "vstd!std_specs.num.usize_specs.")

(module_id "vstd!std_specs.num.isize_specs.")

(module_id "vstd!arithmetic.internals.")

(module_id "vstd!arithmetic.div_mod.")

(module_id "vstd!arithmetic.logarithm.")

(module_id "vstd!arithmetic.mul.")

(module_id "vstd!arithmetic.power.")

(module_id "vstd!arithmetic.power2.")

(module_id "vstd!std_specs.atomic.")

(module_id "vstd!std_specs.bits.")

(module_id "vstd!std_specs.clone.")

(module_id "vstd!std_specs.control_flow.")

(module_id "vstd!std_specs.core.")

(module_id "vstd!std_specs.hash.")

(module_id "vstd!std_specs.num.")

(module_id "vstd!std_specs.option.")

(module_id "vstd!std_specs.range.")

(module_id "vstd!std_specs.result.")

(module_id "vstd!std_specs.vec.")

(module_id "vstd!std_specs.smart_ptrs.")

(module_id "vstd!raw_ptr.ptr_mut_specs.")

(module_id "vstd!raw_ptr.ptr_const_specs.")

(module_id "vstd!rwlock.RwLockToks.")

(module_id "vstd!shared.Dupe.")

(module_id "vstd!arithmetic.")

(module_id "vstd!array.")

(module_id "vstd!atomic.")

(module_id "vstd!atomic_ghost.")

(module_id "vstd!bits.")

(module_id "vstd!bytes.")

(module_id "vstd!calc_macro.")

(module_id "vstd!cell.")

(module_id "vstd!function.")

(module_id "vstd!hash_map.")

(module_id "vstd!hash_set.")

(module_id "vstd!invariant.")

(module_id "vstd!layout.")

(module_id "vstd!map.")

(module_id "vstd!map_lib.")

(module_id "vstd!math.")

(module_id "vstd!modes.")

(module_id "vstd!multiset.")

(module_id "vstd!multiset_lib.")

(module_id "vstd!pcm.")

(module_id "vstd!pcm_lib.")

(module_id "vstd!pervasive.")

(module_id "vstd!proph.")

(module_id "vstd!ptr.")

(module_id "vstd!raw_ptr.")

(module_id "vstd!rwlock.")

(module_id "vstd!seq.")

(module_id "vstd!seq_lib.")

(module_id "vstd!set.")

(module_id "vstd!set_lib.")

(module_id "vstd!shared.")

(module_id "vstd!simple_pptr.")

(module_id "vstd!slice.")

(module_id "vstd!state_machine_internal.")

(module_id "vstd!storage_protocol.")

(module_id "vstd!string.")

(module_id "vstd!thread.")

(module_id "vstd!view.")

(module_id "vstd!relations.")

(module_id "vstd!std_specs.")

(module_id "vstd!prelude.")

(module_id "vstd!.")

(module_id "singly_linked_list_trivial!.")

(external_fn (Fun :path "vstd!invariant.open_atomic_invariant_begin."))

(external_fn (Fun :path "vstd!invariant.open_local_invariant_begin."))

(external_fn (Fun :path "vstd!invariant.open_invariant_end."))

(external_fn (Fun :path "vstd!pervasive.runtime_assert_internal."))

(arch_word_bits (ArchWordBits Either32Or64))

